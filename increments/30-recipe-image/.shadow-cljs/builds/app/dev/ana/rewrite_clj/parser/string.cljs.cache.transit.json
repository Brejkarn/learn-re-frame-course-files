["^ ","~:output",["^ ","~:js","goog.provide('rewrite_clj.parser.string');\ngoog.require('cljs.core');\ngoog.require('rewrite_clj.node');\ngoog.require('rewrite_clj.reader');\ngoog.require('goog.string');\n/**\n * Flush buffer and add string to the given vector.\n */\nrewrite_clj.parser.string.flush_into = (function rewrite_clj$parser$string$flush_into(lines,buf){\nvar s = buf.toString();\nbuf.set(\"\");\n\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(lines,s);\n});\nrewrite_clj.parser.string.read_string_data = (function rewrite_clj$parser$string$read_string_data(reader){\nrewrite_clj.reader.ignore(reader);\n\nvar buf = (new goog.string.StringBuffer());\nvar escape_QMARK_ = false;\nvar lines = cljs.core.PersistentVector.EMPTY;\nwhile(true){\nvar temp__5455__auto__ = (rewrite_clj.reader.read_char.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.reader.read_char.cljs$core$IFn$_invoke$arity$1(reader) : rewrite_clj.reader.read_char.call(null,reader));\nif(cljs.core.truth_(temp__5455__auto__)){\nvar c = temp__5455__auto__;\nif((((!(escape_QMARK_))) && ((c === \"\\\"\")))){\nreturn rewrite_clj.parser.string.flush_into(lines,buf);\n} else {\nif((c === \"\\n\")){\nvar G__30417 = escape_QMARK_;\nvar G__30418 = rewrite_clj.parser.string.flush_into(lines,buf);\nescape_QMARK_ = G__30417;\nlines = G__30418;\ncontinue;\n} else {\nbuf.append(c);\n\nvar G__30419 = (((!(escape_QMARK_))) && ((c === \"\\\\\")));\nvar G__30420 = lines;\nescape_QMARK_ = G__30419;\nlines = G__30420;\ncontinue;\n\n}\n}\n} else {\nreturn rewrite_clj.reader.throw_reader(reader,\"Unexpected EOF while reading string.\");\n}\nbreak;\n}\n});\nrewrite_clj.parser.string.parse_string = (function rewrite_clj$parser$string$parse_string(reader){\nvar G__30409 = rewrite_clj.parser.string.read_string_data(reader);\nreturn (rewrite_clj.node.string_node.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.node.string_node.cljs$core$IFn$_invoke$arity$1(G__30409) : rewrite_clj.node.string_node.call(null,G__30409));\n});\nrewrite_clj.parser.string.parse_regex = (function rewrite_clj$parser$string$parse_regex(reader){\nvar lines = rewrite_clj.parser.string.read_string_data(reader);\nvar regex = clojure.string.join.cljs$core$IFn$_invoke$arity$2(\"\\n\",lines);\nvar G__30412 = cljs.core.re_pattern(regex);\nvar G__30413 = [\"#\\\"\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(regex),\"\\\"\"].join('');\nreturn (rewrite_clj.node.token_node.cljs$core$IFn$_invoke$arity$2 ? rewrite_clj.node.token_node.cljs$core$IFn$_invoke$arity$2(G__30412,G__30413) : rewrite_clj.node.token_node.call(null,G__30412,G__30413));\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","rewrite_clj/parser/string.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",30],"~:ns-aliases",["^ ","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$rewrite-clj.parser.string","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$rewrite-clj.node","^K","~$node","^K","~$rewrite-clj.reader","^M","~$r","^M","~$goog.string","^N","~$gstring","^N","~$cljs.core","^P","~$goog","^Q"],"~:seen",["^D",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^P","^P"],"~:form",["~#list",["~$ns","^F",["^W",["^S",["^K","~:as","^L"],["^M","^Y","~$r"],["^N","^Y","^O"]]]]],"~:flags",["^ ","^S",["^D",[]]],"~:js-deps",["^ "],"~:deps",["^Q","^P","^K","^M","^N"]],"^H","^F","~:resource-id",["~:shadow.build.classpath/resource","rewrite_clj/parser/string.cljs"],"~:compiled-at",1551693810510,"~:resource-name","rewrite_clj/parser/string.cljs","~:warnings",[],"~:source","(ns rewrite-clj.parser.string\n  (:require [rewrite-clj.node :as node]\n            [rewrite-clj.reader :as r]\n            [goog.string :as gstring]))\n\n(defn- flush-into\n  \"Flush buffer and add string to the given vector.\"\n  [lines buf]\n  (let [s (.toString buf)]\n    (.set buf \"\")\n    (conj lines s)))\n\n(defn- read-string-data\n  [^not-native reader]\n  (r/ignore reader)\n  (let [buf (gstring/StringBuffer.)]\n    (loop [escape? false\n           lines []]\n      (if-let [c (r/read-char reader)]\n        (cond (and (not escape?) (identical? c \\\"))\n              (flush-into lines buf)\n\n              (identical? c \\newline)\n              (recur escape? (flush-into lines buf))\n\n              :else\n              (do\n                (.append buf c)\n                (recur (and (not escape?) (identical? c \\\\)) lines)))\n        (r/throw-reader reader \"Unexpected EOF while reading string.\")))))\n\n(defn parse-string\n  [^not-native reader]\n  (node/string-node (read-string-data reader)))\n\n(defn parse-regex\n  [^not-native reader]\n  (let [lines (read-string-data reader)\n        regex (clojure.string/join \"\\n\" lines)]\n    (node/token-node (re-pattern regex) (str \"#\\\"\" regex \"\\\"\"))))\n","~:reader-features",["^D",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings",";;;;;AAKA;;;AAAA,AAAOA,AAEJC,AAAMC;AAFT,AAGE,AAAMC,AAAE,AAAWD;AAAnB,AACE,AAAA,AAAMA;;AACN,AAACE,AAAKH,AAAME;;AAEhB,AAAA,AAAOE,AACQC;AADf,AAEE,AAACC,AAASD;;AACV,AAAMJ,AAAI,AAAAM;AAAV,AACE,AAAA,AAAOC;AAAP,AACOR;;AADP,AAEE,AAAAS,AAAW,AAACE,AAAAA,AAAAA,AAAYN,AAAAA;AAAxB,AAAA,AAAAI;AAAA,AAAAA,AAASC;AAAT,AACE,AAAM,AAAK,AAAKF,AAAS,AAAA,AAAYE;AAC/B,AAACX,AAAWC,AAAMC;;AADxB,AAGM,AAAA,AAAYS;AACZ,AAAOF;AAAQ,AAACT,AAAWC,AAAMC;;;;;AAJvC,AAOM,AACE,AAASA,AAAIS;;AACb,AAAO,AAAK,AAAKF,AAAS,AAAA,AAAYE;AAAOV;;;;;;;;AACrD,AAAA,AAACY,AAAeP;;;;;AAExB,AAAA,AAAMQ,AACSR;AADf,AAEE,AAAAS,AAAkB,AAACV,AAAiBC;AAApC,AAAA,AAAAS,AAAAA,AAACC,AAAAA,AAAAA;;AAEH,AAAA,AAAMC,AACSX;AADf,AAEE,AAAML,AAAM,AAACI,AAAiBC;AACxBY,AAAM,AAAA,AAACC,AAAyBlB;AADtC,AAEE,AAAAmB,AAAiB,AAACG,AAAWL;AAA7BG,AAAoC,AAAA,AAAA,AAAWH;AAA/C,AAAA,AAAAE,AAAAC,AAAAD,AAAAC,AAACC,AAAAA,AAAAA","names",["rewrite-clj.parser.string/flush-into","lines","buf","s","cljs.core.conj.cljs$core$IFn$_invoke$arity$2","rewrite-clj.parser.string/read-string-data","reader","rewrite-clj.reader/ignore","goog.string/StringBuffer","escape?","temp__5455__auto__","c","rewrite-clj.reader/read-char","rewrite-clj.reader/throw-reader","rewrite-clj.parser.string/parse-string","G__30409","rewrite-clj.node/string-node","rewrite-clj.parser.string/parse-regex","regex","clojure.string.join.cljs$core$IFn$_invoke$arity$2","G__30412","G__30413","rewrite-clj.node/token-node","cljs.core/re-pattern"]]],"~:cache-keys",["~#cmap",[["^12","rewrite_clj/node/token.cljs"],[1538195422000,"^Q","^P","~$rewrite-clj.node.protocols"],["~:macro","^P"],[1549013760000],["^12","cljs/tools/reader/impl/utils.cljs"],[1544005130000,"^Q","^P","~$clojure.string","^N"],["^12","goog/math/math.js"],[1538195417000,"^Q","~$goog.array","~$goog.asserts"],["^12","rewrite_clj/parser/string.cljs"],[1538195422000,"^Q","^P","^K","^M","^N"],["^12","goog/array/array.js"],[1538195417000,"^Q","^1C"],["^1@","~$cljs.tools.reader.reader-types"],[1544005130000],["^12","goog/debug/error.js"],[1538195417000,"^Q"],["^12","goog/dom/nodetype.js"],[1538195417000,"^Q"],["^12","cljs/tools/reader/impl/inspect.cljs"],[1544005130000,"^Q","^P"],["^12","cljs/tools/reader.cljs"],[1544005130000,"^Q","^P","^1D","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader.impl.errors","^1B","^N","~$goog.string.StringBuffer"],["^12","rewrite_clj/node/forms.cljs"],[1538195422000,"^Q","^P","^1?"],["^12","goog/object/object.js"],[1538195417000,"^Q"],"~:SHADOW-TIMESTAMP",[1549286327000,1549013760000],["^12","goog/math/long.js"],[1538195417000,"^Q","^1C","~$goog.reflect"],["^12","rewrite_clj/node/reader_macro.cljs"],[1538195422000,"^Q","^P","^1?","~$rewrite-clj.node.whitespace"],["^12","goog/functions/functions.js"],[1538195417000,"^Q"],["^12","clojure/walk.cljs"],[1549013760000,"^Q","^P"],["^12","goog/structs/map.js"],[1538195417000,"^Q","~$goog.iter.Iterator","~$goog.iter.StopIteration","~$goog.object"],["^12","rewrite_clj/node/meta.cljs"],[1538195422000,"^Q","^P","^1?","^1K"],["^12","rewrite_clj/node/stringz.cljs"],[1538195422000,"^Q","^P","^1?","~$cljs.tools.reader","^1A"],["^12","rewrite_clj/node/comment.cljs"],[1538195422000,"^Q","^P","^1?"],["^12","rewrite_clj/node/keyword.cljs"],[1538195422000,"^Q","^P","^1?"],["^12","goog/asserts/asserts.js"],[1538195417000,"^Q","~$goog.debug.Error","~$goog.dom.NodeType","^N"],["^12","goog/uri/uri.js"],[1538195417000,"^Q","^1B","^1C","^N","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"],["^12","rewrite_clj/node/protocols.cljs"],[1538195422000,"^Q","^P","^1A"],["^12","rewrite_clj/node/seq.cljs"],[1538195422000,"^Q","^P","^1?"],["^12","rewrite_clj/node/uneval.cljs"],[1538195422000,"^Q","^P","^1?"],["^12","goog/base.js"],[1538195417000],["^12","goog/structs/structs.js"],[1538195417000,"^Q","^1B","^1N"],["^12","cljs/tools/reader/impl/errors.cljs"],[1544005130000,"^Q","^P","^1D","^1A","~$cljs.tools.reader.impl.inspect"],["^12","rewrite_clj/node/whitespace.cljs"],[1538195422000,"^Q","^P","^1?"],["^12","rewrite_clj/node/coercer.cljs"],[1538195422000,"^Q","^P","~$rewrite-clj.node.comment","~$rewrite-clj.node.forms","~$rewrite-clj.node.keyword","~$rewrite-clj.node.quote","~$rewrite-clj.node.stringz","~$rewrite-clj.node.uneval","~$rewrite-clj.node.meta","~$rewrite-clj.node.fn","^1?","~$rewrite-clj.node.reader-macro","~$rewrite-clj.node.seq","~$rewrite-clj.node.token","^1K"],["^12","clojure/string.cljs"],[1549013760000,"^Q","^P","^N","^1H"],["^12","goog/string/string.js"],[1538195417000,"^Q"],["^12","goog/reflect/reflect.js"],[1538195417000,"^Q"],["^12","rewrite_clj/node/fn.cljs"],[1538195422000,"^Q","^P","^1?","~$clojure.walk"],["^12","rewrite_clj/node.cljs"],[1538195422000,"^Q","^P","~$rewrite-clj.node.coercer","^1?","^1Z","^25","^1K","^26","^1X","^1Y","^22","^20","^24","^1[","^21","^23"],["^12","goog/string/stringbuffer.js"],[1538195417000,"^Q"],["^12","cljs/tools/reader/reader_types.cljs"],[1544005130000,"^Q","^P","^1E","^N","^1H"],["^12","goog/iter/iter.js"],[1538195417000,"^Q","^1B","^1C","~$goog.functions","~$goog.math"],["^12","rewrite_clj/reader.cljs"],[1538195422000,"^Q","^P","^1O","^1D","^1F","^N","^1?"],["^12","rewrite_clj/node/quote.cljs"],[1538195422000,"^Q","^P","^1?"],["^12","cljs/tools/reader/impl/commons.cljs"],[1544005130000,"^Q","^P","^1G","^1D","^1E"],["^12","cljs/core.cljs"],[1549013760000,"~$goog.math.Long","~$goog.math.Integer","^N","^1N","^1B","~$goog.Uri","^1H"],["^12","goog/math/integer.js"],[1538195417000,"^Q"],["^12","goog/uri/utils.js"],[1538195417000,"^Q","^1B","^1C","^N"]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","rewrite_clj/parser/string.cljs","^7",1,"^8",5,"^9",1,"^:",30],"^;",["^ ","^<","^=","^>","^?","^@","^A"],"^B",null,"^C",["^D",[]],"^E","^F","^I",null,"^J",["^ ","^K","^K","^L","^K","^M","^M","~$r","^M","^N","^N","^O","^N","^P","^P","^Q","^Q"],"^R",["^D",["^S"]],"^T",null,"~:defs",["^ ","~$flush-into",["^ ","~:protocol-inline",null,"^5",["^ ","^6","rewrite_clj/parser/string.cljs","^7",6,"^8",8,"^9",6,"^:",18,"~:private",true,"~:arglists",["^W",["~$quote",["^W",[["~$lines","~$buf"]]]]],"~:doc","Flush buffer and add string to the given vector."],"^2B",true,"^E","~$rewrite-clj.parser.string/flush-into","^6","rewrite_clj/parser/string.cljs","^:",18,"~:method-params",["^W",[["^2E","^2F"]]],"~:protocol-impl",null,"~:arglists-meta",["^W",[null,null]],"^8",1,"~:variadic?",false,"^7",6,"~:ret-tag","~$clj","^9",6,"~:max-fixed-arity",2,"~:fn-var",true,"^2C",["^W",["^2D",["^W",[["^2E","^2F"]]]]],"^2G","Flush buffer and add string to the given vector."],"~$read-string-data",["^ ","^2A",null,"^5",["^ ","^6","rewrite_clj/parser/string.cljs","^7",13,"^8",8,"^9",13,"^:",24,"^2B",true,"^2C",["^W",["^2D",["^W",[["~$reader"]]]]]],"^2B",true,"^E","~$rewrite-clj.parser.string/read-string-data","^6","rewrite_clj/parser/string.cljs","^:",24,"^2I",["^W",[["^2R"]]],"^2J",null,"^2K",["^W",[null,null]],"^8",1,"^2L",false,"^7",13,"^2M","^2N","^9",13,"^2O",1,"^2P",true,"^2C",["^W",["^2D",["^W",[["^2R"]]]]]],"~$parse-string",["^ ","^2A",null,"^5",["^ ","^6","rewrite_clj/parser/string.cljs","^7",32,"^8",7,"^9",32,"^:",19,"^2C",["^W",["^2D",["^W",[["^2R"]]]]]],"^E","~$rewrite-clj.parser.string/parse-string","^6","rewrite_clj/parser/string.cljs","^:",19,"^2I",["^W",[["^2R"]]],"^2J",null,"^2K",["^W",[null,null]],"^8",1,"^2L",false,"^7",32,"^2M","~$any","^9",32,"^2O",1,"^2P",true,"^2C",["^W",["^2D",["^W",[["^2R"]]]]]],"~$parse-regex",["^ ","^2A",null,"^5",["^ ","^6","rewrite_clj/parser/string.cljs","^7",36,"^8",7,"^9",36,"^:",18,"^2C",["^W",["^2D",["^W",[["^2R"]]]]]],"^E","~$rewrite-clj.parser.string/parse-regex","^6","rewrite_clj/parser/string.cljs","^:",18,"^2I",["^W",[["^2R"]]],"^2J",null,"^2K",["^W",[null,null]],"^8",1,"^2L",false,"^7",36,"^2M","^2V","^9",36,"^2O",1,"^2P",true,"^2C",["^W",["^2D",["^W",[["^2R"]]]]]]],"^U",["^ ","^P","^P"],"~:cljs.analyzer/constants",["^ ","^R",["^D",["~:else"]],"~:order",["^2Z"]],"^Z",["^ ","^S",["^D",[]]],"^[",["^ "],"^10",["^Q","^P","^K","^M","^N"]],"^H","^F","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^1>",[["^32","~:static-fns"],true,["^32","~:elide-asserts"],false,["^32","~:optimize-constants"],null,["^32","^15"],null,["^32","~:external-config"],null,["^32","~:tooling-config"],null,["^32","~:emit-constants"],null,["^32","~:load-tests"],null,["^32","~:infer-externs"],true,["^32","^17"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^32","~:fn-invoke-direct"],null,["^32","~:source-map"],"/dev/null"]]]