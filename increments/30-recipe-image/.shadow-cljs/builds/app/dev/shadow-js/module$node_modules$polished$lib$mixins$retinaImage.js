["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/polished/lib/mixins/retinaImage.js"],"~:js","shadow$provide.module$node_modules$polished$lib$mixins$retinaImage=function(global,process,require,module,exports,shadow$shims){function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i],key;for(key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target};return _extends.apply(this,arguments)}exports.__esModule=!0;exports.default=void 0;var _hiDPI=function(obj){return obj&&obj.__esModule?obj:\n{default:obj}}(require(\"module$node_modules$polished$lib$mixins$hiDPI\"));exports.default=function(filename,backgroundSize,extension,retinaFilename,retinaSuffix){var _ref;void 0===extension&&(extension=\"png\");void 0===retinaSuffix&&(retinaSuffix=\"_2x\");if(!filename)throw Error(\"Please supply a filename to retinaImage() as the first argument.\");extension=extension.replace(/^\\./,\"\");retinaFilename=retinaFilename?retinaFilename+\".\"+extension:\"\"+filename+retinaSuffix+\".\"+extension;return _ref={backgroundImage:\"url(\"+\nfilename+\".\"+extension+\")\"},_ref[(0,_hiDPI.default)()]=_extends({backgroundImage:\"url(\"+retinaFilename+\")\"},backgroundSize?{backgroundSize:backgroundSize}:{}),_ref};module.exports=exports.default}","~:source","shadow$provide[\"module$node_modules$polished$lib$mixins$retinaImage\"] = function(global,process,require,module,exports,shadow$shims) {\n\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _hiDPI =\n/*#__PURE__*/\n_interopRequireDefault(\n/*#__PURE__*/\nrequire(\"./hiDPI\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n/**\n * A helper to generate a retina background image and non-retina\n * background image. The retina background image will output to a HiDPI media query. The mixin uses\n * a _2x.png filename suffix by default.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *  ...retinaImage('my-img')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${retinaImage('my-img')}\n * `\n *\n * // CSS as JS Output\n * div {\n *   backgroundImage: 'url(my-img.png)',\n *   '@media only screen and (-webkit-min-device-pixel-ratio: 1.3),\n *    only screen and (min--moz-device-pixel-ratio: 1.3),\n *    only screen and (-o-min-device-pixel-ratio: 1.3/1),\n *    only screen and (min-resolution: 144dpi),\n *    only screen and (min-resolution: 1.5dppx)': {\n *     backgroundImage: 'url(my-img_2x.png)',\n *   }\n * }\n */\nfunction retinaImage(filename, backgroundSize, extension, retinaFilename, retinaSuffix) {\n  var _ref;\n\n  if (extension === void 0) {\n    extension = 'png';\n  }\n\n  if (retinaSuffix === void 0) {\n    retinaSuffix = '_2x';\n  }\n\n  if (!filename) {\n    throw new Error('Please supply a filename to retinaImage() as the first argument.');\n  } // Replace the dot at the beginning of the passed extension if one exists\n\n\n  var ext = extension.replace(/^\\./, '');\n  var rFilename = retinaFilename ? retinaFilename + \".\" + ext : \"\" + filename + retinaSuffix + \".\" + ext;\n  return _ref = {\n    backgroundImage: \"url(\" + filename + \".\" + ext + \")\"\n  }, _ref[(0, _hiDPI.default)()] = _extends({\n    backgroundImage: \"url(\" + rFilename + \")\"\n  }, backgroundSize ? {\n    backgroundSize: backgroundSize\n  } : {}), _ref;\n}\n\nvar _default = retinaImage;\nexports.default = _default;\nmodule.exports = exports.default;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$polished$lib$mixins$hiDPI","~$shadow.js"]],"~:properties",["^5",["backgroundImage","__esModule","backgroundSize","default"]],"~:compiled-at",1552227496740,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$polished$lib$mixins$retinaImage.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,oDAAA,CAAwE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAcrIC,QAASA,SAAQ,EAAG,CAAEA,QAAA,CAAWC,MAAAC,OAAX,EAA4B,QAAS,CAACC,MAAD,CAAS,CAAE,IAAK,IAAIC,EAAI,CAAb,CAAgBA,CAAhB,CAAoBC,SAAAC,OAApB,CAAsCF,CAAA,EAAtC,CAA2C,CAAE,IAAIG,OAASF,SAAA,CAAUD,CAAV,CAAb,CAAoCI,GAAT,KAASA,GAAT,GAAgBD,OAAhB,CAA8BN,MAAAQ,UAAAC,eAAAC,KAAA,CAAqCJ,MAArC,CAA6CC,GAA7C,CAAJ,GAAyDL,MAAA,CAAOK,GAAP,CAAzD,CAAuED,MAAA,CAAOC,GAAP,CAAvE,CAAvD,CAAiJ,MAAOL,OAArM,CAAgN,OAAOH,SAAAY,MAAA,CAAe,IAAf,CAAqBP,SAArB,CAAvQ,CAXpBP,OAAAe,WAAA,CAAqB,CAAA,CACrBf,QAAAgB,QAAA,CAAkB,IAAK,EAEvB,KAAIC,OAMJC,QAA+B,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAOA,GAAAJ,WAAP,CAAwBI,GAAxB;AAA8B,CAAEH,QAASG,GAAX,CAAvC,CAJrC,CAEArB,OAAA,CAAQ,+CAAR,CAFA,CAgEAE,QAAAgB,QAAA,CA5BAI,QAAoB,CAACC,QAAD,CAAWC,cAAX,CAA2BC,SAA3B,CAAsCC,cAAtC,CAAsDC,YAAtD,CAAoE,CACtF,IAAIC,IAEc,KAAK,EAAvB,GAAIH,SAAJ,GACEA,SADF,CACc,KADd,CAIqB,KAAK,EAA1B,GAAIE,YAAJ,GACEA,YADF,CACiB,KADjB,CAIA,IAAI,CAACJ,QAAL,CACE,KAAUM,MAAJ,CAAU,kEAAV,CAAN,CAIEC,SAAAA,CAAML,SAAAM,QAAA,CAAkB,KAAlB,CAAyB,EAAzB,CACNC,eAAAA,CAAYN,cAAA,CAAiBA,cAAjB,CAAkC,GAAlC,CAAwCI,SAAxC,CAA8C,EAA9C,CAAmDP,QAAnD,CAA8DI,YAA9D,CAA6E,GAA7E,CAAmFG,SACnG,OAAOF,KAAA,CAAO,CACZK,gBAAiB,MAAjBA;AAA0BV,QAA1BU,CAAqC,GAArCA,CAA2CH,SAA3CG,CAAiD,GADrC,CAAP,CAEJL,IAAA,CAAK,CAAC,CAAA,CAAGT,MAAAD,QAAJ,GAAL,CAFI,CAE0Bd,QAAA,CAAS,CACxC6B,gBAAiB,MAAjBA,CAA0BD,cAA1BC,CAAsC,GADE,CAAT,CAE9BT,cAAA,CAAiB,CAClBA,eAAgBA,cADE,CAAjB,CAEC,EAJ6B,CAF1B,CAMEI,IAxB6E,CA6BxF3B,OAAAC,QAAA,CAAiBA,OAAAgB,QAzEoH;\",\n\"sources\":[\"node_modules/polished/lib/mixins/retinaImage.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$polished$lib$mixins$retinaImage\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n\\\"use strict\\\";\\n\\nexports.__esModule = true;\\nexports.default = void 0;\\n\\nvar _hiDPI =\\n/*#__PURE__*/\\n_interopRequireDefault(\\n/*#__PURE__*/\\nrequire(\\\"./hiDPI\\\"));\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\\n\\n/**\\n * A helper to generate a retina background image and non-retina\\n * background image. The retina background image will output to a HiDPI media query. The mixin uses\\n * a _2x.png filename suffix by default.\\n *\\n * @example\\n * // Styles as object usage\\n * const styles = {\\n *  ...retinaImage('my-img')\\n * }\\n *\\n * // styled-components usage\\n * const div = styled.div`\\n *   ${retinaImage('my-img')}\\n * `\\n *\\n * // CSS as JS Output\\n * div {\\n *   backgroundImage: 'url(my-img.png)',\\n *   '@media only screen and (-webkit-min-device-pixel-ratio: 1.3),\\n *    only screen and (min--moz-device-pixel-ratio: 1.3),\\n *    only screen and (-o-min-device-pixel-ratio: 1.3/1),\\n *    only screen and (min-resolution: 144dpi),\\n *    only screen and (min-resolution: 1.5dppx)': {\\n *     backgroundImage: 'url(my-img_2x.png)',\\n *   }\\n * }\\n */\\nfunction retinaImage(filename, backgroundSize, extension, retinaFilename, retinaSuffix) {\\n  var _ref;\\n\\n  if (extension === void 0) {\\n    extension = 'png';\\n  }\\n\\n  if (retinaSuffix === void 0) {\\n    retinaSuffix = '_2x';\\n  }\\n\\n  if (!filename) {\\n    throw new Error('Please supply a filename to retinaImage() as the first argument.');\\n  } // Replace the dot at the beginning of the passed extension if one exists\\n\\n\\n  var ext = extension.replace(/^\\\\./, '');\\n  var rFilename = retinaFilename ? retinaFilename + \\\".\\\" + ext : \\\"\\\" + filename + retinaSuffix + \\\".\\\" + ext;\\n  return _ref = {\\n    backgroundImage: \\\"url(\\\" + filename + \\\".\\\" + ext + \\\")\\\"\\n  }, _ref[(0, _hiDPI.default)()] = _extends({\\n    backgroundImage: \\\"url(\\\" + rFilename + \\\")\\\"\\n  }, backgroundSize ? {\\n    backgroundSize: backgroundSize\\n  } : {}), _ref;\\n}\\n\\nvar _default = retinaImage;\\nexports.default = _default;\\nmodule.exports = exports.default;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"_extends\",\"Object\",\"assign\",\"target\",\"i\",\"arguments\",\"length\",\"source\",\"key\",\"prototype\",\"hasOwnProperty\",\"call\",\"apply\",\"__esModule\",\"default\",\"_hiDPI\",\"_interopRequireDefault\",\"obj\",\"retinaImage\",\"filename\",\"backgroundSize\",\"extension\",\"retinaFilename\",\"retinaSuffix\",\"_ref\",\"Error\",\"ext\",\"replace\",\"rFilename\",\"backgroundImage\"]\n}\n"]