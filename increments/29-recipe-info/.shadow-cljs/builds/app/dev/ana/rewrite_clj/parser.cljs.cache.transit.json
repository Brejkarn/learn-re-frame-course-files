["^ ","~:output",["^ ","~:js","goog.provide('rewrite_clj.parser');\ngoog.require('cljs.core');\ngoog.require('rewrite_clj.parser.core');\ngoog.require('rewrite_clj.node');\ngoog.require('rewrite_clj.reader');\n/**\n * Parse next form from the given reader.\n */\nrewrite_clj.parser.parse = (function rewrite_clj$parser$parse(reader){\nreturn rewrite_clj.parser.core.parse_next(reader);\n});\n/**\n * Parse all forms from the given reader.\n */\nrewrite_clj.parser.parse_all = (function rewrite_clj$parser$parse_all(reader){\nvar nodes = cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.identity,cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1((function (){\nreturn rewrite_clj.parser.parse(reader);\n}))));\nreturn cljs.core.with_meta((rewrite_clj.node.forms_node.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.node.forms_node.cljs$core$IFn$_invoke$arity$1(nodes) : rewrite_clj.node.forms_node.call(null,nodes)),cljs.core.meta(cljs.core.first(nodes)));\n});\n/**\n * Parse first form in the given string.\n */\nrewrite_clj.parser.parse_string = (function rewrite_clj$parser$parse_string(s){\nreturn rewrite_clj.parser.parse((rewrite_clj.reader.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.reader.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$1(s) : rewrite_clj.reader.indexing_push_back_reader.call(null,s)));\n});\n/**\n * Parse all forms in the given string.\n */\nrewrite_clj.parser.parse_string_all = (function rewrite_clj$parser$parse_string_all(s){\nreturn rewrite_clj.parser.parse_all((rewrite_clj.reader.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.reader.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$1(s) : rewrite_clj.reader.indexing_push_back_reader.call(null,s)));\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","rewrite_clj/parser.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",23],"~:ns-aliases",["^ ","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$rewrite-clj.parser","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$rewrite-clj.parser.core","^K","~$p","^K","~$rewrite-clj.node","^L","~$node","^L","~$rewrite-clj.reader","^N","~$r","^N","~$cljs.core","^O","~$goog","^P"],"~:seen",["^D",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^O","^O"],"~:form",["~#list",["~$ns","^F",["^V",["^R",["^K","~:as","~$p"],["^L","^X","^M"],["^N","^X","~$r"]]]]],"~:flags",["^ ","^R",["^D",[]]],"~:js-deps",["^ "],"~:deps",["^P","^O","^K","^L","^N"]],"^H","^F","~:resource-id",["~:shadow.build.classpath/resource","rewrite_clj/parser.cljs"],"~:compiled-at",1551693810543,"~:resource-name","rewrite_clj/parser.cljs","~:warnings",[],"~:source","(ns rewrite-clj.parser\n  (:require [rewrite-clj.parser.core :as p]\n            [rewrite-clj.node :as node]\n            [rewrite-clj.reader :as r]))\n\n;; ## Parser Core\n\n(defn parse\n  \"Parse next form from the given reader.\"\n  [^not-native reader]\n  (p/parse-next reader))\n\n(defn parse-all\n  \"Parse all forms from the given reader.\"\n  [^not-native reader]\n  (let [nodes (->> (repeatedly #(parse reader))\n                   (take-while identity)\n                   (doall))]\n    (with-meta\n      (node/forms-node nodes)\n      (meta (first nodes)))))\n\n;; ## Specialized Parsers\n\n(defn parse-string\n  \"Parse first form in the given string.\"\n  [s]\n  (parse (r/indexing-push-back-reader s)))\n\n(defn parse-string-all\n  \"Parse all forms in the given string.\"\n  [s]\n  (parse-all (r/indexing-push-back-reader s)))\n\n\n","~:reader-features",["^D",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings",";;;;;AAOA;;;AAAA,AAAMA,AAESC;AAFf,AAGE,AAACC,AAAaD;;AAEhB;;;AAAA,AAAME,AAESF;AAFf,AAGE,AAAMG,AAAW,AAAA,AAACC,AACD,AAACC,AAAWC,AACZ,AAACC;AAFD,AAAa,AAACR,AAAMC;;AAArC,AAGE,AAACQ,AACC,AAACC,AAAAA,AAAAA,AAAgBN,AAAAA,AACjB,AAACO,AAAK,AAACC,AAAMR;;AAInB;;;AAAA,AAAMS,AAEHC;AAFH,AAGE,AAACd,AAAM,AAACe,AAAAA,AAAAA,AAA4BD,AAAAA;;AAEtC;;;AAAA,AAAME,AAEHF;AAFH,AAGE,AAACX,AAAU,AAACY,AAAAA,AAAAA,AAA4BD,AAAAA","names",["rewrite-clj.parser/parse","reader","rewrite-clj.parser.core/parse-next","rewrite-clj.parser/parse-all","nodes","cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1","cljs.core.take_while.cljs$core$IFn$_invoke$arity$2","cljs.core/identity","cljs.core.doall.cljs$core$IFn$_invoke$arity$1","cljs.core/with-meta","rewrite-clj.node/forms-node","cljs.core/meta","cljs.core/first","rewrite-clj.parser/parse-string","s","rewrite-clj.reader/indexing-push-back-reader","rewrite-clj.parser/parse-string-all"]]],"~:cache-keys",["~#cmap",[["^11","rewrite_clj/node/token.cljs"],[1538195422000,"^P","^O","~$rewrite-clj.node.protocols"],["~:macro","^O"],[1549013760000],["^11","cljs/tools/reader/impl/utils.cljs"],[1544005130000,"^P","^O","~$clojure.string","~$goog.string"],["^11","goog/math/math.js"],[1538195417000,"^P","~$goog.array","~$goog.asserts"],["^11","rewrite_clj/parser/core.cljs"],[1538195422000,"^P","^O","^L","^N","~$rewrite-clj.parser.keyword","~$rewrite-clj.parser.string","~$rewrite-clj.parser.token","~$rewrite-clj.parser.whitespace","~$cljs.tools.reader.reader-types"],["^11","rewrite_clj/parser/string.cljs"],[1538195422000,"^P","^O","^L","^N","^1A"],["^11","goog/array/array.js"],[1538195417000,"^P","^1C"],["^1?","^1H"],[1544005130000],["^11","goog/debug/error.js"],[1538195417000,"^P"],["^11","goog/dom/nodetype.js"],[1538195417000,"^P"],["^11","cljs/tools/reader/impl/inspect.cljs"],[1544005130000,"^P","^O"],["^11","cljs/tools/reader.cljs"],[1544005130000,"^P","^O","^1H","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader.impl.errors","^1B","^1A","~$goog.string.StringBuffer"],["^11","rewrite_clj/node/forms.cljs"],[1538195422000,"^P","^O","^1>"],["^11","goog/object/object.js"],[1538195417000,"^P"],"~:SHADOW-TIMESTAMP",[1549286327000,1549013760000],["^11","goog/math/long.js"],[1538195417000,"^P","^1C","~$goog.reflect"],["^11","rewrite_clj/node/reader_macro.cljs"],[1538195422000,"^P","^O","^1>","~$rewrite-clj.node.whitespace"],["^11","goog/functions/functions.js"],[1538195417000,"^P"],["^11","clojure/walk.cljs"],[1549013760000,"^P","^O"],["^11","goog/structs/map.js"],[1538195417000,"^P","~$goog.iter.Iterator","~$goog.iter.StopIteration","~$goog.object"],["^11","rewrite_clj/node/meta.cljs"],[1538195422000,"^P","^O","^1>","^1O"],["^11","rewrite_clj/node/stringz.cljs"],[1538195422000,"^P","^O","^1>","~$cljs.tools.reader","^1@"],["^11","rewrite_clj/node/comment.cljs"],[1538195422000,"^P","^O","^1>"],["^11","rewrite_clj/node/keyword.cljs"],[1538195422000,"^P","^O","^1>"],["^11","goog/asserts/asserts.js"],[1538195417000,"^P","~$goog.debug.Error","~$goog.dom.NodeType","^1A"],["^11","goog/uri/uri.js"],[1538195417000,"^P","^1B","^1C","^1A","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"],["^11","rewrite_clj/node/protocols.cljs"],[1538195422000,"^P","^O","^1@"],["^11","rewrite_clj/node/seq.cljs"],[1538195422000,"^P","^O","^1>"],["^11","rewrite_clj/node/uneval.cljs"],[1538195422000,"^P","^O","^1>"],["^11","goog/base.js"],[1538195417000],["^11","goog/structs/structs.js"],[1538195417000,"^P","^1B","^1R"],["^11","cljs/tools/reader/impl/errors.cljs"],[1544005130000,"^P","^O","^1H","^1@","~$cljs.tools.reader.impl.inspect"],["^11","rewrite_clj/node/whitespace.cljs"],[1538195422000,"^P","^O","^1>"],["^11","rewrite_clj/node/coercer.cljs"],[1538195422000,"^P","^O","~$rewrite-clj.node.comment","~$rewrite-clj.node.forms","~$rewrite-clj.node.keyword","~$rewrite-clj.node.quote","~$rewrite-clj.node.stringz","~$rewrite-clj.node.uneval","~$rewrite-clj.node.meta","~$rewrite-clj.node.fn","^1>","~$rewrite-clj.node.reader-macro","~$rewrite-clj.node.seq","~$rewrite-clj.node.token","^1O"],["^11","clojure/string.cljs"],[1549013760000,"^P","^O","^1A","^1L"],["^11","rewrite_clj/parser.cljs"],[1538195422000,"^P","^O","^K","^L","^N"],["^11","rewrite_clj/parser/keyword.cljs"],[1538195422000,"^P","^O","^L","^1H","^N"],["^11","rewrite_clj/parser/token.cljs"],[1538195422000,"^P","^O","^L","^N","^1A"],["^11","goog/string/string.js"],[1538195417000,"^P"],["^11","goog/reflect/reflect.js"],[1538195417000,"^P"],["^11","rewrite_clj/node/fn.cljs"],[1538195422000,"^P","^O","^1>","~$clojure.walk"],["^11","rewrite_clj/node.cljs"],[1538195422000,"^P","^O","~$rewrite-clj.node.coercer","^1>","^22","^29","^1O","^2:","^20","^21","^26","^24","^28","^23","^25","^27"],["^11","goog/string/stringbuffer.js"],[1538195417000,"^P"],["^11","cljs/tools/reader/reader_types.cljs"],[1544005130000,"^P","^O","^1I","^1A","^1L"],["^11","goog/iter/iter.js"],[1538195417000,"^P","^1B","^1C","~$goog.functions","~$goog.math"],["^11","rewrite_clj/reader.cljs"],[1538195422000,"^P","^O","^1S","^1H","^1J","^1A","^1>"],["^11","rewrite_clj/node/quote.cljs"],[1538195422000,"^P","^O","^1>"],["^11","cljs/tools/reader/impl/commons.cljs"],[1544005130000,"^P","^O","^1K","^1H","^1I"],["^11","cljs/core.cljs"],[1549013760000,"~$goog.math.Long","~$goog.math.Integer","^1A","^1R","^1B","~$goog.Uri","^1L"],["^11","goog/math/integer.js"],[1538195417000,"^P"],["^11","goog/uri/utils.js"],[1538195417000,"^P","^1B","^1C","^1A"],["^11","rewrite_clj/parser/whitespace.cljs"],[1538195422000,"^P","^O","^L","^N"]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","rewrite_clj/parser.cljs","^7",1,"^8",5,"^9",1,"^:",23],"^;",["^ ","^<","^=","^>","^?","^@","^A"],"^B",null,"^C",["^D",[]],"^E","^F","^I",null,"^J",["^ ","^K","^K","~$p","^K","^L","^L","^M","^L","^N","^N","~$r","^N","^O","^O","^P","^P"],"^Q",["^D",["^R"]],"^S",null,"~:defs",["^ ","~$parse",["^ ","~:protocol-inline",null,"^5",["^ ","^6","rewrite_clj/parser.cljs","^7",8,"^8",7,"^9",8,"^:",12,"~:arglists",["^V",["~$quote",["^V",[["~$reader"]]]]],"~:doc","Parse next form from the given reader."],"^E","~$rewrite-clj.parser/parse","^6","rewrite_clj/parser.cljs","^:",12,"~:method-params",["^V",[["^2H"]]],"~:protocol-impl",null,"~:arglists-meta",["^V",[null,null]],"^8",1,"~:variadic?",false,"^7",8,"~:ret-tag",["^D",["~$clj","~$clj-nil"]],"^9",8,"~:max-fixed-arity",1,"~:fn-var",true,"^2F",["^V",["^2G",["^V",[["^2H"]]]]],"^2I","Parse next form from the given reader."],"~$parse-all",["^ ","^2E",null,"^5",["^ ","^6","rewrite_clj/parser.cljs","^7",13,"^8",7,"^9",13,"^:",16,"^2F",["^V",["^2G",["^V",[["^2H"]]]]],"^2I","Parse all forms from the given reader."],"^E","~$rewrite-clj.parser/parse-all","^6","rewrite_clj/parser.cljs","^:",16,"^2K",["^V",[["^2H"]]],"^2L",null,"^2M",["^V",[null,null]],"^8",1,"^2N",false,"^7",13,"^2O",["^D",["^2P","~$cljs.core/MetaFn","^2Q"]],"^9",13,"^2R",1,"^2S",true,"^2F",["^V",["^2G",["^V",[["^2H"]]]]],"^2I","Parse all forms from the given reader."],"~$parse-string",["^ ","^2E",null,"^5",["^ ","^6","rewrite_clj/parser.cljs","^7",25,"^8",7,"^9",25,"^:",19,"^2F",["^V",["^2G",["^V",[["~$s"]]]]],"^2I","Parse first form in the given string."],"^E","~$rewrite-clj.parser/parse-string","^6","rewrite_clj/parser.cljs","^:",19,"^2K",["^V",[["~$s"]]],"^2L",null,"^2M",["^V",[null,null]],"^8",1,"^2N",false,"^7",25,"^2O",["^D",["^2P","^2Q"]],"^9",25,"^2R",1,"^2S",true,"^2F",["^V",["^2G",["^V",[["~$s"]]]]],"^2I","Parse first form in the given string."],"~$parse-string-all",["^ ","^2E",null,"^5",["^ ","^6","rewrite_clj/parser.cljs","^7",30,"^8",7,"^9",30,"^:",23,"^2F",["^V",["^2G",["^V",[["~$s"]]]]],"^2I","Parse all forms in the given string."],"^E","~$rewrite-clj.parser/parse-string-all","^6","rewrite_clj/parser.cljs","^:",23,"^2K",["^V",[["~$s"]]],"^2L",null,"^2M",["^V",[null,null]],"^8",1,"^2N",false,"^7",30,"^2O",["^D",["^2P","^2V","^2Q"]],"^9",30,"^2R",1,"^2S",true,"^2F",["^V",["^2G",["^V",[["~$s"]]]]],"^2I","Parse all forms in the given string."]],"^T",["^ ","^O","^O"],"^Y",["^ ","^R",["^D",[]]],"^Z",["^ "],"^[",["^P","^O","^K","^L","^N"]],"^H","^F","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^1=",[["^31","~:static-fns"],true,["^31","~:elide-asserts"],false,["^31","~:optimize-constants"],null,["^31","^14"],null,["^31","~:external-config"],null,["^31","~:tooling-config"],null,["^31","~:emit-constants"],null,["^31","~:load-tests"],null,["^31","~:infer-externs"],true,["^31","^16"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^31","~:fn-invoke-direct"],null,["^31","~:source-map"],"/dev/null"]]]