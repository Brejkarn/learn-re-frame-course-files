["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/polished/lib/mixins/cover.js"],"~:js","shadow$provide.module$node_modules$polished$lib$mixins$cover=function(global,process,require,module,exports,shadow$shims){exports.__esModule=!0;exports.default=void 0;exports.default=function(offset){void 0===offset&&(offset=0);return{position:\"absolute\",top:offset,right:offset,bottom:offset,left:offset}};module.exports=exports.default}","~:source","shadow$provide[\"module$node_modules$polished$lib$mixins$cover\"] = function(global,process,require,module,exports,shadow$shims) {\n\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\n/**\n * CSS to fully cover an area. Can optionally be passed an offset to act as a \"padding\".\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...cover()\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${cover()}\n * `\n *\n * // CSS as JS Output\n *\n * div: {\n *   'position': 'absolute',\n *   'top': '0',\n *   'right: '0',\n *   'bottom': '0',\n *   'left: '0'\n * }\n */\nfunction cover(offset) {\n  if (offset === void 0) {\n    offset = 0;\n  }\n\n  return {\n    position: 'absolute',\n    top: offset,\n    right: offset,\n    bottom: offset,\n    left: offset\n  };\n}\n\nvar _default = cover;\nexports.default = _default;\nmodule.exports = exports.default;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["right","top","__esModule","position","bottom","default","left"]],"~:compiled-at",1552033974558,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$polished$lib$mixins$cover.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,8CAAA,CAAkE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAG/HD,OAAAE,WAAA,CAAqB,CAAA,CACrBF,QAAAG,QAAA,CAAkB,IAAK,EAyCvBH,QAAAG,QAAA,CAfAC,QAAc,CAACC,MAAD,CAAS,CACN,IAAK,EAApB,GAAIA,MAAJ,GACEA,MADF,CACW,CADX,CAIA,OAAO,CACLC,SAAU,UADL,CAELC,IAAKF,MAFA,CAGLG,MAAOH,MAHF,CAILI,OAAQJ,MAJH,CAKLK,KAAML,MALD,CALc,CAgBvBN,OAAAC,QAAA,CAAiBA,OAAAG,QA9C8G;\",\n\"sources\":[\"node_modules/polished/lib/mixins/cover.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$polished$lib$mixins$cover\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n\\\"use strict\\\";\\n\\nexports.__esModule = true;\\nexports.default = void 0;\\n\\n/**\\n * CSS to fully cover an area. Can optionally be passed an offset to act as a \\\"padding\\\".\\n *\\n * @example\\n * // Styles as object usage\\n * const styles = {\\n *   ...cover()\\n * }\\n *\\n * // styled-components usage\\n * const div = styled.div`\\n *   ${cover()}\\n * `\\n *\\n * // CSS as JS Output\\n *\\n * div: {\\n *   'position': 'absolute',\\n *   'top': '0',\\n *   'right: '0',\\n *   'bottom': '0',\\n *   'left: '0'\\n * }\\n */\\nfunction cover(offset) {\\n  if (offset === void 0) {\\n    offset = 0;\\n  }\\n\\n  return {\\n    position: 'absolute',\\n    top: offset,\\n    right: offset,\\n    bottom: offset,\\n    left: offset\\n  };\\n}\\n\\nvar _default = cover;\\nexports.default = _default;\\nmodule.exports = exports.default;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"__esModule\",\"default\",\"cover\",\"offset\",\"position\",\"top\",\"right\",\"bottom\",\"left\"]\n}\n"]