{"version":3,"sources":["app/recipes/events.cljs"],"sourcesContent":["(ns app.recipes.events\n  (:require [re-frame.core :refer [reg-event-db reg-event-fx]]))\n\n(reg-event-db\n :save-recipe\n (fn [db [_ recipe-id]]\n   (let [uid (get-in db [:auth :uid])]\n     (-> db\n         (update-in [:users uid :saved] conj recipe-id)\n         (update-in [:recipes recipe-id :saved-count] inc)))))\n\n(reg-event-fx\n :delete-ingredient\n (fn [{:keys [db]} [_ ingredient-id]]\n   (let [recipe-id (get-in db [:nav :active-recipe])]\n     {:db (update-in db [:recipes recipe-id :ingredients] dissoc ingredient-id)\n      :dispatch [:close-modal]})))\n\n(reg-event-fx\n :upsert-ingredient\n (fn [{:keys [db]} [_ {:keys [id name amount measure]}]]\n   (let [recipe-id (get-in db [:nav :active-recipe])\n         ingredients (get-in db [:recipes recipe-id :ingredients])\n         order (or (get-in ingredients [id :order])\n                   (inc (count ingredients)))]\n     {:db (assoc-in db [:recipes recipe-id :ingredients id] {:id id\n                                                             :order order\n                                                             :name name\n                                                             :amount amount\n                                                             :measure measure})\n      :dispatch [:close-modal]})))\n"],"mappings":";;;AAGA,AAAA,AAACA,AAEA,AAAAC,AAAKG;AAAL,AAAA,AAAAF,AAAAD;AAAA,AAAAE,AAAAD,AAAA,AAAA,AAASG;AAAT,AAAAF,AAAAD,AAAA,AAAA,AAAWI;AAAX,AACE,AAAMC,AAAI,AAAA,AAAA,AAAA,AAACC,AAAOJ;AAAlB,AACMA,AACA,AAAA,AAAA,AAAA,AAACK,AAAkBF,AAAYG,AAAKJ,AACpC,AAAA,AAAA,AAAA,AAACK,AAAoBL,AAAwBM;;AAEtD,AAAA,AAACC,AAEA,AAAAC,AAAAC;AAAA,AAAA,AAAAC,AAAAF;AAAAE,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAA,AAAAI,AAAAJ,AAAA,AAAaZ;AAAbiB,AAAAN;AAAA,AAAAZ,AAAAkB,AAAA,AAAA,AAAmBhB;AAAnB,AAAAF,AAAAkB,AAAA,AAAA,AAAqBC;AAArB,AACE,AAAMhB,AAAU,AAAA,AAAA,AAAA,AAACE,AAAOJ;AAAxB,AAAA,AAAA,AAAA,AAAA,AAAA,AACO,AAAA,AAAA,AAAA,AAACK,AAAUL,AAAaE,AAAwBiB,AAAOD;;AAGjE,AAAA,AAACT,AAEA,AAAAW,AAAAC;AAAA,AAAA,AAAAC,AAAAF;AAAAE,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAT,AAAA,AAAAS,AAAA,AAAA,AAAA,AAAA,AAAAR,AAAAC,AAAAO,AAAAA;AAAA,AAAAN,AAAAM,AAAA,AAAatB;AAAbuB,AAAAF;AAAA,AAAAtB,AAAAwB,AAAA,AAAA,AAAmBtB;AAAnBuB,AAAA,AAAAzB,AAAAwB,AAAA,AAAA;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAX,AAAA,AAAAW,AAAA,AAAA,AAAA,AAAA,AAAAV,AAAAC,AAAAS,AAAAA;AAAA,AAAAR,AAAAQ,AAAA,AAA6BC;AAA7B,AAAAT,AAAAQ,AAAA,AAAgCE;AAAhC,AAAAV,AAAAQ,AAAA,AAAqCG;AAArC,AAAAX,AAAAQ,AAAA,AAA4CI;AAA5C,AACE,AAAM1B,AAAU,AAAA,AAAA,AAAA,AAACE,AAAOJ;AAClB6B,AAAY,AAAA,AAAA,AAAA,AAACzB,AAAOJ,AAAaE;AACjC4B,AAAM,AAAAC,AAAI,AAAA,AAAA,AAAC3B,AAAOyB,AAAaJ;AAAzB,AAAA,AAAAM;AAAAA;;AACI,AAAA,AAAK,AAACC,AAAMH;;;AAH5B,AAAA,AAAA,AAAA,AAAA,AAAA,AAIO,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAACI,AAASjC,AAAaE,AAAuBuB,AAASA,AACGK,AACDJ,AACEC,AACCC","names":["re_frame.core.reg_event_db.cljs$core$IFn$_invoke$arity$2","p__26210","vec__26211","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","db","_","recipe-id","uid","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2","cljs.core.update_in.cljs$core$IFn$_invoke$arity$4","cljs.core/conj","cljs.core.update_in.cljs$core$IFn$_invoke$arity$3","cljs.core/inc","re_frame.core.reg_event_fx.cljs$core$IFn$_invoke$arity$2","p__26214","p__26215","map__26216","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","vec__26217","ingredient-id","cljs.core/dissoc","p__26221","p__26222","map__26223","vec__26224","map__26227","id","name","amount","measure","ingredients","order","or__4131__auto__","cljs.core/count","cljs.core/assoc-in"]}