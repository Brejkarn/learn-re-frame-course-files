{"version":3,"sources":["app/helpers.cljs"],"sourcesContent":["(ns app.helpers\n  (:require [cljs-time.core :as t]))\n\n;; https://stackoverflow.com/questions/32511405/how-would-time-ago-function-implementation-look-like-in-clojure\n(defn time-ago\n  [timestamp]\n  (let [units [{:name \"second\" :limit 60 :in-second 1}\n               {:name \"minute\" :limit 3600 :in-second 60}\n               {:name \"hour\" :limit 86400 :in-second 3600}\n               {:name \"day\" :limit 604800 :in-second 86400}\n               {:name \"week\" :limit 2629743 :in-second 604800}\n               {:name \"month\" :limit 31556926 :in-second 2629743}\n               {:name \"year\" :limit js/Number.MAX_VALUE :in-second 31556926}]\n        time (js/Date. timestamp)\n        diff (t/in-seconds (t/interval time (t/now)))]\n    (if (< diff 5)\n      \"just now\"\n      (let [unit (first (drop-while #(or (>= diff (:limit %))\n                                         (not (:limit %)))\n                                    units))]\n        (-> (/ diff (:in-second unit))\n            Math/floor\n            int\n            (#(str % \" \" (:name unit) (when (> % 1) \"s\") \" ago\")))))))\n\n(defn format-price\n  [cents]\n  (str (/ (js/parseInt cents) 100) \" \u20ac\"))\n"],"mappings":";;;AAIA,AAAA,AAAMA,AACHC;AADH,AAEE,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAMC,AAM4BC;AAC5BC,AAAK,AAAAC,AAAUJ;AACfK,AAAK,AAACC,AAAa,AAACC,AAAWJ,AAAK,AAACK;AAR3C,AASE,AAAI,AAAA,AAAGH;AAAP;;AAEE,AAAMI,AAAK,AAACC,AAAM,AAAA,AAACE;AAADD;AAAA,AAAa,AAAI,AAAIN,AAAK,AAAA,AAAAM,AACT,AAACE,AAAI,AAAA,AAAAF;;AACVV;AAF9B,AAGM,AAAGI,AAAK,AAAA,AAAYI,AAGpB,AAAAM,AAAA,AAAA,AAAAC;AAFAF,AAEA,AAAA,AAAAE;AAAA;AAAAC,AAAA;AAAAC;AAAA,AAAE,AAAAA,AAAA,AAAA,AAAW,AAAA,AAAOT,AAAM,AAAA,AAAA,AAAA,AAAM,AAAAS,AAAA;;;AAAhC,AAAA,AAAAD,AAAAF;;;AAEZ,AAAA,AAAMI,AACHC;AADH,AAEE,AAAA,AAAK,AAAA,AAAG,AAACC,AAAYD","names":["app.helpers/time-ago","timestamp","units","js/Number.MAX_VALUE","time","js/Date","diff","cljs-time.core/in-seconds","cljs-time.core/interval","cljs-time.core/now","unit","cljs.core/first","p1__27109#","cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2","cljs.core/not","Math/floor","G__27112","G__27113","fexpr__27111","p1__27110#","app.helpers/format-price","cents","js/parseInt"]}