["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/polished/lib/internalHelpers/_statefulSelectors.js"],"~:js","shadow$provide.module$node_modules$polished$lib$internalHelpers$_statefulSelectors=function(global,process,require,module,exports,shadow$shims){function generateSelectors(template,state){return template(state?\":\"+state:\"\")}exports.__esModule=!0;exports.default=void 0;exports.default=function(states,template,stateMap){if(!template)throw Error(\"You must provide a template to this method.\");if(0===states.length)return generateSelectors(template,null);for(var selectors=[],i=0;i<states.length;i+=1){if(stateMap&&\n0>stateMap.indexOf(states[i]))throw Error(\"You passed an unsupported selector state to this method.\");selectors.push(generateSelectors(template,states[i]))}return selectors=selectors.join(\",\")};module.exports=exports.default}","~:source","shadow$provide[\"module$node_modules$polished$lib$internalHelpers$_statefulSelectors\"] = function(global,process,require,module,exports,shadow$shims) {\n\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nfunction generateSelectors(template, state) {\n  var stateSuffix = state ? \":\" + state : '';\n  return template(stateSuffix);\n}\n/**\n * Function helper that adds an array of states to a template of selectors. Used in textInputs and buttons.\n * @private\n */\n\n\nfunction statefulSelectors(states, template, stateMap) {\n  if (!template) throw new Error('You must provide a template to this method.');\n  if (states.length === 0) return generateSelectors(template, null);\n  var selectors = [];\n\n  for (var i = 0; i < states.length; i += 1) {\n    if (stateMap && stateMap.indexOf(states[i]) < 0) {\n      throw new Error('You passed an unsupported selector state to this method.');\n    }\n\n    selectors.push(generateSelectors(template, states[i]));\n  }\n\n  selectors = selectors.join(',');\n  return selectors;\n}\n\nvar _default = statefulSelectors;\nexports.default = _default;\nmodule.exports = exports.default;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["__esModule","default"]],"~:compiled-at",1553958937720,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$polished$lib$internalHelpers$_statefulSelectors.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,oEAAA,CAAwF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAMrJC,QAASA,kBAAiB,CAACC,QAAD,CAAWC,KAAX,CAAkB,CAE1C,MAAOD,SAAA,CADWC,KAAAC,CAAQ,GAARA,CAAcD,KAAdC,CAAsB,EACjC,CAFmC,CAH5CL,OAAAM,WAAA,CAAqB,CAAA,CACrBN,QAAAO,QAAA,CAAkB,IAAK,EA8BvBP,QAAAO,QAAA,CAlBAC,QAA0B,CAACC,MAAD,CAASN,QAAT,CAAmBO,QAAnB,CAA6B,CACrD,GAAI,CAACP,QAAL,CAAe,KAAUQ,MAAJ,CAAU,6CAAV,CAAN,CACf,GAAsB,CAAtB,GAAIF,MAAAG,OAAJ,CAAyB,MAAOV,kBAAA,CAAkBC,QAAlB,CAA4B,IAA5B,CAGhC,KAFA,IAAIU,UAAY,EAAhB,CAESC,EAAI,CAAb,CAAgBA,CAAhB,CAAoBL,MAAAG,OAApB,CAAmCE,CAAnC,EAAwC,CAAxC,CAA2C,CACzC,GAAIJ,QAAJ;AAA8C,CAA9C,CAAgBA,QAAAK,QAAA,CAAiBN,MAAA,CAAOK,CAAP,CAAjB,CAAhB,CACE,KAAUH,MAAJ,CAAU,0DAAV,CAAN,CAGFE,SAAAG,KAAA,CAAed,iBAAA,CAAkBC,QAAlB,CAA4BM,MAAA,CAAOK,CAAP,CAA5B,CAAf,CALyC,CAS3C,MADAD,UACA,CADYA,SAAAI,KAAA,CAAe,GAAf,CAbyC,CAmBvDlB,OAAAC,QAAA,CAAiBA,OAAAO,QAnCoI;\",\n\"sources\":[\"node_modules/polished/lib/internalHelpers/_statefulSelectors.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$polished$lib$internalHelpers$_statefulSelectors\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n\\\"use strict\\\";\\n\\nexports.__esModule = true;\\nexports.default = void 0;\\n\\nfunction generateSelectors(template, state) {\\n  var stateSuffix = state ? \\\":\\\" + state : '';\\n  return template(stateSuffix);\\n}\\n/**\\n * Function helper that adds an array of states to a template of selectors. Used in textInputs and buttons.\\n * @private\\n */\\n\\n\\nfunction statefulSelectors(states, template, stateMap) {\\n  if (!template) throw new Error('You must provide a template to this method.');\\n  if (states.length === 0) return generateSelectors(template, null);\\n  var selectors = [];\\n\\n  for (var i = 0; i < states.length; i += 1) {\\n    if (stateMap && stateMap.indexOf(states[i]) < 0) {\\n      throw new Error('You passed an unsupported selector state to this method.');\\n    }\\n\\n    selectors.push(generateSelectors(template, states[i]));\\n  }\\n\\n  selectors = selectors.join(',');\\n  return selectors;\\n}\\n\\nvar _default = statefulSelectors;\\nexports.default = _default;\\nmodule.exports = exports.default;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"generateSelectors\",\"template\",\"state\",\"stateSuffix\",\"__esModule\",\"default\",\"statefulSelectors\",\"states\",\"stateMap\",\"Error\",\"length\",\"selectors\",\"i\",\"indexOf\",\"push\",\"join\"]\n}\n"]