["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/polished/lib/shorthands/animation.js"],"~:js","shadow$provide.module$node_modules$polished$lib$shorthands$animation=function(global,process,require,module,exports,shadow$shims){exports.__esModule=!0;exports.default=void 0;exports.default=function(){for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];var multiMode=Array.isArray(args[0]);if(!multiMode&&8<args.length)throw Error(\"The animation shorthand only takes 8 arguments. See the specification for more information: http://mdn.io/animation\");return{animation:args.map(function(arg){if(multiMode&&\n!Array.isArray(arg)||!multiMode&&Array.isArray(arg))throw Error(\"To pass multiple animations please supply them in arrays, e.g. animation(['rotate', '2s'], ['move', '1s'])\\nTo pass a single animation please supply them in simple values, e.g. animation('rotate', '2s')\");if(Array.isArray(arg)&&8<arg.length)throw Error(\"The animation shorthand arrays can only have 8 elements. See the specification for more information: http://mdn.io/animation\");return Array.isArray(arg)?arg.join(\" \"):arg}).join(\", \")}};\nmodule.exports=exports.default}","~:source","shadow$provide[\"module$node_modules$polished$lib$shorthands$animation\"] = function(global,process,require,module,exports,shadow$shims) {\n\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\n/**\n * Shorthand for easily setting the animation property. Allows either multiple arrays with animations\n * or a single animation spread over the arguments.\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...animation(['rotate', '1s', 'ease-in-out'], ['colorchange', '2s'])\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${animation(['rotate', '1s', 'ease-in-out'], ['colorchange', '2s'])}\n * `\n *\n * // CSS as JS Output\n *\n * div {\n *   'animation': 'rotate 1s ease-in-out, colorchange 2s'\n * }\n * @example\n * // Styles as object usage\n * const styles = {\n *   ...animation('rotate', '1s', 'ease-in-out')\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   ${animation('rotate', '1s', 'ease-in-out')}\n * `\n *\n * // CSS as JS Output\n *\n * div {\n *   'animation': 'rotate 1s ease-in-out'\n * }\n */\nfunction animation() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  // Allow single or multiple animations passed\n  var multiMode = Array.isArray(args[0]);\n\n  if (!multiMode && args.length > 8) {\n    throw new Error('The animation shorthand only takes 8 arguments. See the specification for more information: http://mdn.io/animation');\n  }\n\n  var code = args.map(function (arg) {\n    if (multiMode && !Array.isArray(arg) || !multiMode && Array.isArray(arg)) {\n      throw new Error(\"To pass multiple animations please supply them in arrays, e.g. animation(['rotate', '2s'], ['move', '1s'])\\nTo pass a single animation please supply them in simple values, e.g. animation('rotate', '2s')\");\n    }\n\n    if (Array.isArray(arg) && arg.length > 8) {\n      throw new Error('The animation shorthand arrays can only have 8 elements. See the specification for more information: http://mdn.io/animation');\n    }\n\n    return Array.isArray(arg) ? arg.join(' ') : arg;\n  }).join(', ');\n  return {\n    animation: code\n  };\n}\n\nvar _default = animation;\nexports.default = _default;\nmodule.exports = exports.default;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["__esModule","animation","default"]],"~:compiled-at",1553548856462,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$polished$lib$shorthands$animation.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,sDAAA,CAA0E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAGvID,OAAAE,WAAA,CAAqB,CAAA,CACrBF,QAAAG,QAAA,CAAkB,IAAK,EAmEvBH,QAAAG,QAAA,CA7BAC,QAAkB,EAAG,CACnB,IADmB,IACVC,KAAOC,SAAAC,OADG,CACeC,KAAWC,KAAJ,CAAUJ,IAAV,CADtB,CACuCK,KAAO,CAAjE,CAAoEA,IAApE,CAA2EL,IAA3E,CAAiFK,IAAA,EAAjF,CACEF,IAAA,CAAKE,IAAL,CAAA,CAAaJ,SAAA,CAAUI,IAAV,CAIf,KAAIC,UAAYF,KAAAG,QAAA,CAAcJ,IAAA,CAAK,CAAL,CAAd,CAEhB,IAAI,CAACG,SAAL,EAAgC,CAAhC,CAAkBH,IAAAD,OAAlB,CACE,KAAUM,MAAJ,CAAU,qHAAV,CAAN,CAcF,MAAO,CACLT,UAZSI,IAAAM,IAAA,CAAS,QAAS,CAACC,GAAD,CAAM,CACjC,GAAIJ,SAAJ;AAAiB,CAACF,KAAAG,QAAA,CAAcG,GAAd,CAAlB,EAAwC,CAACJ,SAAzC,EAAsDF,KAAAG,QAAA,CAAcG,GAAd,CAAtD,CACE,KAAUF,MAAJ,CAAU,4MAAV,CAAN,CAGF,GAAIJ,KAAAG,QAAA,CAAcG,GAAd,CAAJ,EAAuC,CAAvC,CAA0BA,GAAAR,OAA1B,CACE,KAAUM,MAAJ,CAAU,8HAAV,CAAN,CAGF,MAAOJ,MAAAG,QAAA,CAAcG,GAAd,CAAA,CAAqBA,GAAAC,KAAA,CAAS,GAAT,CAArB,CAAqCD,GATX,CAAxB,CAAAC,KAAAC,CAUH,IAVGA,CAWJ,CAvBY,CA8BrBlB;MAAAC,QAAA,CAAiBA,OAAAG,QAxEsH;\",\n\"sources\":[\"node_modules/polished/lib/shorthands/animation.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$polished$lib$shorthands$animation\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n\\\"use strict\\\";\\n\\nexports.__esModule = true;\\nexports.default = void 0;\\n\\n/**\\n * Shorthand for easily setting the animation property. Allows either multiple arrays with animations\\n * or a single animation spread over the arguments.\\n * @example\\n * // Styles as object usage\\n * const styles = {\\n *   ...animation(['rotate', '1s', 'ease-in-out'], ['colorchange', '2s'])\\n * }\\n *\\n * // styled-components usage\\n * const div = styled.div`\\n *   ${animation(['rotate', '1s', 'ease-in-out'], ['colorchange', '2s'])}\\n * `\\n *\\n * // CSS as JS Output\\n *\\n * div {\\n *   'animation': 'rotate 1s ease-in-out, colorchange 2s'\\n * }\\n * @example\\n * // Styles as object usage\\n * const styles = {\\n *   ...animation('rotate', '1s', 'ease-in-out')\\n * }\\n *\\n * // styled-components usage\\n * const div = styled.div`\\n *   ${animation('rotate', '1s', 'ease-in-out')}\\n * `\\n *\\n * // CSS as JS Output\\n *\\n * div {\\n *   'animation': 'rotate 1s ease-in-out'\\n * }\\n */\\nfunction animation() {\\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\\n    args[_key] = arguments[_key];\\n  }\\n\\n  // Allow single or multiple animations passed\\n  var multiMode = Array.isArray(args[0]);\\n\\n  if (!multiMode && args.length > 8) {\\n    throw new Error('The animation shorthand only takes 8 arguments. See the specification for more information: http://mdn.io/animation');\\n  }\\n\\n  var code = args.map(function (arg) {\\n    if (multiMode && !Array.isArray(arg) || !multiMode && Array.isArray(arg)) {\\n      throw new Error(\\\"To pass multiple animations please supply them in arrays, e.g. animation(['rotate', '2s'], ['move', '1s'])\\\\nTo pass a single animation please supply them in simple values, e.g. animation('rotate', '2s')\\\");\\n    }\\n\\n    if (Array.isArray(arg) && arg.length > 8) {\\n      throw new Error('The animation shorthand arrays can only have 8 elements. See the specification for more information: http://mdn.io/animation');\\n    }\\n\\n    return Array.isArray(arg) ? arg.join(' ') : arg;\\n  }).join(', ');\\n  return {\\n    animation: code\\n  };\\n}\\n\\nvar _default = animation;\\nexports.default = _default;\\nmodule.exports = exports.default;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"__esModule\",\"default\",\"animation\",\"_len\",\"arguments\",\"length\",\"args\",\"Array\",\"_key\",\"multiMode\",\"isArray\",\"Error\",\"map\",\"arg\",\"join\",\"code\"]\n}\n"]