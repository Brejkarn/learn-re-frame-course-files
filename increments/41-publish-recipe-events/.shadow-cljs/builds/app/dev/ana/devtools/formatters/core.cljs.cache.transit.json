["^ ","~:output",["^ ","~:js","goog.provide('devtools.formatters.core');\ngoog.require('cljs.core');\ngoog.require('devtools.prefs');\ngoog.require('devtools.format');\ngoog.require('devtools.protocols');\ngoog.require('devtools.reporter');\ngoog.require('devtools.formatters.templating');\ngoog.require('devtools.formatters.helpers');\ngoog.require('devtools.formatters.state');\ngoog.require('devtools.formatters.markup');\ngoog.require('devtools.formatters.budgeting');\ndevtools.formatters.core.want_value_QMARK__STAR_ = (function devtools$formatters$core$want_value_QMARK__STAR_(value){\nvar and__4120__auto__ = cljs.core.not(devtools.formatters.state.prevent_recursion_QMARK_());\nif(and__4120__auto__){\nvar or__4131__auto__ = devtools.formatters.helpers.cljs_value_QMARK_(value);\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn devtools.formatters.templating.surrogate_QMARK_(value);\n}\n} else {\nreturn and__4120__auto__;\n}\n});\ndevtools.formatters.core.header_STAR_ = (function devtools$formatters$core$header_STAR_(value){\nvar json_ml = ((devtools.formatters.templating.surrogate_QMARK_(value))?devtools.formatters.templating.render_markup(devtools.formatters.markup._LT_surrogate_header_GT_(value)):(cljs.core.truth_((function (){try{if((!((value == null)))){\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL === value.devtools$format$IDevtoolsFormat$)))){\nreturn true;\n} else {\nif((!value.cljs$lang$protocol_mask$partition$)){\nreturn cljs.core.native_satisfies_QMARK_(devtools.format.IDevtoolsFormat,value);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(devtools.format.IDevtoolsFormat,value);\n}\n}catch (e24371){var _e__21932__auto__ = e24371;\nreturn false;\n}})())?devtools.format._header(value):(cljs.core.truth_((function (){try{if((!((value == null)))){\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL === value.devtools$protocols$IFormat$)))){\nreturn true;\n} else {\nif((!value.cljs$lang$protocol_mask$partition$)){\nreturn cljs.core.native_satisfies_QMARK_(devtools.protocols.IFormat,value);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(devtools.protocols.IFormat,value);\n}\n}catch (e24374){var _e__21932__auto__ = e24374;\nreturn false;\n}})())?devtools.protocols._header(value):devtools.formatters.templating.render_markup(devtools.formatters.markup._LT_header_GT_(value))\n)));\nreturn devtools.formatters.budgeting.alter_json_ml_to_fit_in_remaining_budget_BANG_(value,json_ml);\n});\ndevtools.formatters.core.has_body_STAR_ = (function devtools$formatters$core$has_body_STAR_(value){\nif(cljs.core.truth_(devtools.formatters.budgeting.was_over_budget_QMARK__BANG_(value))){\nreturn false;\n} else {\nreturn cljs.core.boolean$(((devtools.formatters.templating.surrogate_QMARK_(value))?(!((devtools.formatters.templating.get_surrogate_body(value) == null))):(cljs.core.truth_((function (){try{if((!((value == null)))){\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL === value.devtools$format$IDevtoolsFormat$)))){\nreturn true;\n} else {\nif((!value.cljs$lang$protocol_mask$partition$)){\nreturn cljs.core.native_satisfies_QMARK_(devtools.format.IDevtoolsFormat,value);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(devtools.format.IDevtoolsFormat,value);\n}\n}catch (e24378){var _e__21932__auto__ = e24378;\nreturn false;\n}})())?devtools.format._has_body(value):(cljs.core.truth_((function (){try{if((!((value == null)))){\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL === value.devtools$protocols$IFormat$)))){\nreturn true;\n} else {\nif((!value.cljs$lang$protocol_mask$partition$)){\nreturn cljs.core.native_satisfies_QMARK_(devtools.protocols.IFormat,value);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(devtools.protocols.IFormat,value);\n}\n}catch (e24382){var _e__21932__auto__ = e24382;\nreturn false;\n}})())?devtools.protocols._has_body(value):false\n))));\n}\n});\ndevtools.formatters.core.body_STAR_ = (function devtools$formatters$core$body_STAR_(value){\ndevtools.formatters.state.update_current_state_BANG_(devtools.formatters.state.reset_depth_limits);\n\nif(devtools.formatters.templating.surrogate_QMARK_(value)){\nreturn devtools.formatters.templating.render_markup(devtools.formatters.markup._LT_surrogate_body_GT_(value));\n} else {\nif(cljs.core.truth_((function (){try{if((!((value == null)))){\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL === value.devtools$format$IDevtoolsFormat$)))){\nreturn true;\n} else {\nif((!value.cljs$lang$protocol_mask$partition$)){\nreturn cljs.core.native_satisfies_QMARK_(devtools.format.IDevtoolsFormat,value);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(devtools.format.IDevtoolsFormat,value);\n}\n}catch (e24385){var _e__21932__auto__ = e24385;\nreturn false;\n}})())){\nreturn devtools.format._body(value);\n} else {\nif(cljs.core.truth_((function (){try{if((!((value == null)))){\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL === value.devtools$protocols$IFormat$)))){\nreturn true;\n} else {\nif((!value.cljs$lang$protocol_mask$partition$)){\nreturn cljs.core.native_satisfies_QMARK_(devtools.protocols.IFormat,value);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(devtools.protocols.IFormat,value);\n}\n}catch (e24390){var _e__21932__auto__ = e24390;\nreturn false;\n}})())){\nreturn devtools.protocols._body(value);\n} else {\nreturn null;\n}\n}\n}\n});\ndevtools.formatters.core.config_wrapper = (function devtools$formatters$core$config_wrapper(raw_fn){\nreturn (function (value,config){\nvar _STAR_current_state_STAR__orig_val__24392 = devtools.formatters.state._STAR_current_state_STAR_;\nvar _STAR_current_state_STAR__temp_val__24393 = (function (){var or__4131__auto__ = config;\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn devtools.formatters.state.get_default_state();\n}\n})();\ndevtools.formatters.state._STAR_current_state_STAR_ = _STAR_current_state_STAR__temp_val__24393;\n\ntry{return (raw_fn.cljs$core$IFn$_invoke$arity$1 ? raw_fn.cljs$core$IFn$_invoke$arity$1(value) : raw_fn.call(null,value));\n}finally {devtools.formatters.state._STAR_current_state_STAR_ = _STAR_current_state_STAR__orig_val__24392;\n}});\n});\ndevtools.formatters.core.want_value_QMARK_ = devtools.formatters.core.config_wrapper(devtools.formatters.core.want_value_QMARK__STAR_);\ndevtools.formatters.core.header = devtools.formatters.core.config_wrapper(devtools.formatters.core.header_STAR_);\ndevtools.formatters.core.has_body = devtools.formatters.core.config_wrapper(devtools.formatters.core.has_body_STAR_);\ndevtools.formatters.core.body = devtools.formatters.core.config_wrapper(devtools.formatters.core.body_STAR_);\ndevtools.formatters.core.wrap_with_exception_guard = (function devtools$formatters$core$wrap_with_exception_guard(f){\nreturn (function() { \nvar G__24414__delegate = function (args){\ntry{return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);\n}catch (e24394){var e = e24394;\ndevtools.reporter.report_internal_error_BANG_.cljs$core$IFn$_invoke$arity$variadic(e,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"an exception was raised during value formatting\"], 0));\n\nreturn null;\n}};\nvar G__24414 = function (var_args){\nvar args = null;\nif (arguments.length > 0) {\nvar G__24415__i = 0, G__24415__a = new Array(arguments.length -  0);\nwhile (G__24415__i < G__24415__a.length) {G__24415__a[G__24415__i] = arguments[G__24415__i + 0]; ++G__24415__i;}\n  args = new cljs.core.IndexedSeq(G__24415__a,0,null);\n} \nreturn G__24414__delegate.call(this,args);};\nG__24414.cljs$lang$maxFixedArity = 0;\nG__24414.cljs$lang$applyTo = (function (arglist__24416){\nvar args = cljs.core.seq(arglist__24416);\nreturn G__24414__delegate(args);\n});\nG__24414.cljs$core$IFn$_invoke$arity$variadic = G__24414__delegate;\nreturn G__24414;\n})()\n;\n});\ndevtools.formatters.core.build_api_call = (function devtools$formatters$core$build_api_call(raw_fn,pre_handler_key,post_handler_key){\n\nvar handler = (function (value,config){\nvar pre_handler = (function (){var or__4131__auto__ = devtools.prefs.pref(pre_handler_key);\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn cljs.core.identity;\n}\n})();\nvar post_handler = (function (){var or__4131__auto__ = devtools.prefs.pref(post_handler_key);\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn cljs.core.identity;\n}\n})();\nvar preprocessed_value = (pre_handler.cljs$core$IFn$_invoke$arity$1 ? pre_handler.cljs$core$IFn$_invoke$arity$1(value) : pre_handler.call(null,value));\nvar result = (cljs.core.truth_((devtools.formatters.core.want_value_QMARK_.cljs$core$IFn$_invoke$arity$2 ? devtools.formatters.core.want_value_QMARK_.cljs$core$IFn$_invoke$arity$2(preprocessed_value,config) : devtools.formatters.core.want_value_QMARK_.call(null,preprocessed_value,config)))?(raw_fn.cljs$core$IFn$_invoke$arity$2 ? raw_fn.cljs$core$IFn$_invoke$arity$2(preprocessed_value,config) : raw_fn.call(null,preprocessed_value,config)):null);\nreturn (post_handler.cljs$core$IFn$_invoke$arity$1 ? post_handler.cljs$core$IFn$_invoke$arity$1(result) : post_handler.call(null,result));\n});\nreturn devtools.formatters.core.wrap_with_exception_guard(handler);\n});\ndevtools.formatters.core.header_api_call = devtools.formatters.core.build_api_call(devtools.formatters.core.header,new cljs.core.Keyword(null,\"header-pre-handler\",\"header-pre-handler\",-1997722262),new cljs.core.Keyword(null,\"header-post-handler\",\"header-post-handler\",514828618));\ndevtools.formatters.core.has_body_api_call = devtools.formatters.core.build_api_call(devtools.formatters.core.has_body,new cljs.core.Keyword(null,\"has-body-pre-handler\",\"has-body-pre-handler\",1787020038),new cljs.core.Keyword(null,\"has-body-post-handler\",\"has-body-post-handler\",-863451271));\ndevtools.formatters.core.body_api_call = devtools.formatters.core.build_api_call(devtools.formatters.core.body,new cljs.core.Keyword(null,\"body-pre-handler\",\"body-pre-handler\",1211926529),new cljs.core.Keyword(null,\"body-post-handler\",\"body-post-handler\",-1040905424));\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","devtools/formatters/core.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",29],"~:ns-aliases",["^ ","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index"],"~:use-macros",["^ ","~$safe-call","~$devtools.oops"],"~:excludes",["~#set",[]],"~:name","~$devtools.formatters.core","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$devtools.formatters.helpers","^M","~$devtools.formatters.markup","^N","~$devtools.formatters.templating","^O","~$devtools.formatters.state","^P","~$cljs.core","^Q","~$devtools.reporter","^R","~$goog","^S","~$devtools.protocols","^T","~$devtools.formatters.budgeting","^U","~$devtools.format","^V","~$reporter","^R","~$devtools.prefs","^X"],"~:seen",["^F",["~:require","~:require-macros"]],"~:uses",["^ ","~$prevent-recursion?","^P","~$<surrogate-header>","^N","~$was-over-budget?!","^U","~$IDevtoolsFormat","^V","~$get-surrogate-body","^O","~$<header>","^N","~$pref","^X","~$<surrogate-body>","^N","~$render-markup","^O","~$update-current-state!","^P","~$IFormat","^T","~$*current-state*","^P","~$surrogate?","^O","~$get-default-state","^P","~$reset-depth-limits","^P","~$alter-json-ml-to-fit-in-remaining-budget!","^U","~$cljs-value?","^M"],"^[",["^ ","^D","^D","^Q","^Q","^N","^N","^X","^X"],"~:form",["~#list",["~$ns","^H",["^1C",["^[",["^D","~:refer",["^C"]]]],["^1C",["^Z",["^X","^1E",["^17"]],["^V","^1E",["^14"]],["^T","^1E",["^1;"]],["^R","~:as","^W"],["^O","^1E",["^1=","^19","^15"]],["^M","^1E",["^1A"]],["^P","^1E",["^11","^1<","^1>","^1:","^1?"]],["^N","^1E",["^16","^12","^18"]],["^U","^1E",["^13","^1@"]]]]]],"~:flags",["^ ","^[",["^F",[]],"^Z",["^F",[]]],"~:js-deps",["^ "],"~:deps",["^S","^Q","^X","^V","^T","^R","^O","^M","^P","^N","^U"]],"^J","^H","~:resource-id",["~:shadow.build.classpath/resource","devtools/formatters/core.cljs"],"~:compiled-at",1552917525646,"~:resource-name","devtools/formatters/core.cljs","~:warnings",[],"~:source","(ns devtools.formatters.core\n  (:require-macros [devtools.oops :refer [safe-call]])\n  (:require [devtools.prefs :refer [pref]]\n            [devtools.format :refer [IDevtoolsFormat]]\n            [devtools.protocols :refer [IFormat]]\n            [devtools.reporter :as reporter]\n            [devtools.formatters.templating :refer [surrogate? render-markup get-surrogate-body]]\n            [devtools.formatters.helpers :refer [cljs-value?]]\n            [devtools.formatters.state :refer [prevent-recursion? *current-state* get-default-state update-current-state!\n                                               reset-depth-limits]]\n            [devtools.formatters.markup :refer [<header> <surrogate-header> <surrogate-body>]]\n            [devtools.formatters.budgeting :refer [was-over-budget?! alter-json-ml-to-fit-in-remaining-budget!]]))\n\n; -- RAW API ----------------------------------------------------------------------------------------------------------------\n\n(defn want-value?* [value]\n  (and (not (prevent-recursion?))\n       (or (cljs-value? value) (surrogate? value))))\n\n(defn header* [value]\n  (let [json-ml (cond\n                  (surrogate? value) (render-markup (<surrogate-header> value))\n                  (safe-call satisfies? false IDevtoolsFormat value) (devtools.format/-header value)\n                  (safe-call satisfies? false IFormat value) (devtools.protocols/-header value)\n                  :else (render-markup (<header> value)))]\n    (alter-json-ml-to-fit-in-remaining-budget! value json-ml)))                                                               ; see issue #22\n\n(defn has-body* [value]\n  ; note: body is emulated using surrogate references\n  (if (was-over-budget?! value)                                                                                               ; see issue #22\n    false                                                                                                                     ; see alter-json-ml-to-fit-in-remaining-budget!, in case we didn't fit into budget, a header-expander placeholder with body was added in place\n    (boolean\n      (cond\n        (surrogate? value) (some? (get-surrogate-body value))\n        (safe-call satisfies? false IDevtoolsFormat value) (devtools.format/-has-body value)\n        (safe-call satisfies? false IFormat value) (devtools.protocols/-has-body value)\n        :else false))))\n\n(defn body* [value]\n  (update-current-state! reset-depth-limits)\n  (cond\n    (surrogate? value) (render-markup (<surrogate-body> value))\n    (safe-call satisfies? false IDevtoolsFormat value) (devtools.format/-body value)\n    (safe-call satisfies? false IFormat value) (devtools.protocols/-body value)))\n\n; ---------------------------------------------------------------------------------------------------------------------------\n; config-aware RAW API, see state management documentation state.cljs\n\n(defn config-wrapper [raw-fn]\n  (fn [value config]\n    (binding [*current-state* (or config (get-default-state))]\n      (raw-fn value))))\n\n(def want-value? (config-wrapper want-value?*))\n(def header (config-wrapper header*))\n(def has-body (config-wrapper has-body*))\n(def body (config-wrapper body*))\n\n; -- API CALLS --------------------------------------------------------------------------------------------------------------\n\n(defn wrap-with-exception-guard [f]\n  (fn [& args]\n    (try\n      (apply f args)\n      (catch :default e\n        (reporter/report-internal-error! e \"an exception was raised during value formatting\")\n        nil))))\n\n(defn build-api-call [raw-fn pre-handler-key post-handler-key]\n  \"Wraps raw API call in a function which calls pre-handler and post-handler.\n\n   pre-handler gets a chance to pre-process value before it is passed to cljs-devtools\n   post-handler gets a chance to post-process value returned by cljs-devtools.\"\n  (let [handler (fn [value config]\n                  (let [pre-handler (or (pref pre-handler-key) identity)\n                        post-handler (or (pref post-handler-key) identity)\n                        preprocessed-value (pre-handler value)\n                        result (if (want-value? preprocessed-value config)\n                                 (raw-fn preprocessed-value config))]\n                    (post-handler result)))]\n    (wrap-with-exception-guard handler)))\n\n(def header-api-call (build-api-call header :header-pre-handler :header-post-handler))\n(def has-body-api-call (build-api-call has-body :has-body-pre-handler :has-body-post-handler))\n(def body-api-call (build-api-call body :body-pre-handler :body-post-handler))\n","~:reader-features",["^F",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["devtools.formatters.core/want-value?*","value","and__4120__auto__","cljs.core/not","devtools.formatters.state/prevent-recursion?","or__4131__auto__","devtools.formatters.helpers/cljs-value?","devtools.formatters.templating/surrogate?","devtools.formatters.core/header*","json-ml","devtools.formatters.templating/render-markup","devtools.formatters.markup/<surrogate-header>","cljs.core/PROTOCOL_SENTINEL","cljs.core/native-satisfies?","_e__21932__auto__","e24371","devtools.format/IDevtoolsFormat","devtools.format/-header","e24374","devtools.protocols/IFormat","devtools.protocols/-header","devtools.formatters.markup/<header>","devtools.formatters.budgeting/alter-json-ml-to-fit-in-remaining-budget!","devtools.formatters.core/has-body*","devtools.formatters.budgeting/was-over-budget?!","cljs.core/boolean","devtools.formatters.templating/get-surrogate-body","e24378","devtools.format/-has-body","e24382","devtools.protocols/-has-body","devtools.formatters.core/body*","devtools.formatters.state/update-current-state!","devtools.formatters.state/reset-depth-limits","devtools.formatters.markup/<surrogate-body>","e24385","devtools.format/-body","e24390","devtools.protocols/-body","devtools.formatters.core/config-wrapper","raw-fn","config","*current-state*-orig-val__24392","*current-state*-temp-val__24393","devtools.formatters.state/*current-state*","devtools.formatters.state/get-default-state","devtools.formatters.core/want-value?","devtools.formatters.core/header","devtools.formatters.core/has-body","devtools.formatters.core/body","devtools.formatters.core/wrap-with-exception-guard","f","args","e24394","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","e","devtools.reporter.report_internal_error_BANG_.cljs$core$IFn$_invoke$arity$variadic","devtools.formatters.core/build-api-call","pre-handler-key","post-handler-key","handler","pre-handler","devtools.prefs/pref","cljs.core/identity","post-handler","preprocessed-value","result","devtools.formatters.core/header-api-call","devtools.formatters.core/has-body-api-call","devtools.formatters.core/body-api-call"]]],"~:cache-keys",["~#cmap",[["~:macro","~$devtools.defaults"],[1538195421000],["^1K","devtools/formatters/printing.cljs"],[1538195421000,"^S","^Q","^X","^V","^T","^P","^M"],["^1K","goog/labs/useragent/platform.js"],[1538195417000,"^S","~$goog.labs.userAgent.util","~$goog.string"],["^1X","^Q"],[1549013760000],["^1K","devtools/formatters/markup.cljs"],[1538195421000,"^S","^Q","^M","~$devtools.formatters.printing","^P","^O","~$devtools.munging"],["^1X","^N"],[1538195421000],["^1K","devtools/formatters/helpers.cljs"],[1538195421000,"^S","^Q","^X","^21","^V","^T"],["^1K","goog/math/math.js"],[1538195417000,"^S","~$goog.array","~$goog.asserts"],["^1K","goog/labs/useragent/browser.js"],[1538195417000,"^S","^22","^1Z","~$goog.object","^1["],["^1K","goog/array/array.js"],[1538195417000,"^S","^23"],["^1X","~$devtools.version"],[1538195421000],["^1K","goog/useragent/useragent.js"],[1538195417000,"^S","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^1Z","~$goog.reflect","^1["],["^1K","devtools/formatters/templating.cljs"],[1538195421000,"^S","^Q","~$clojure.walk","~$devtools.util","^T","^M","^P","~$clojure.string"],["^1K","goog/debug/error.js"],[1538195417000,"^S"],["^1K","goog/dom/nodetype.js"],[1538195417000,"^S"],["^1K","cljs/pprint.cljs"],[1549013760000,"^S","^Q","^2<","^1[","~$goog.string.StringBuffer"],["^1K","devtools/formatters/budgeting.cljs"],[1538195421000,"^S","^Q","^O","^P","^M","^N"],["^1K","goog/object/object.js"],[1538195417000,"^S"],"~:SHADOW-TIMESTAMP",[1549286327000,1549013760000],["^1K","goog/math/long.js"],[1538195417000,"^S","^23","^29"],["^1K","devtools/version.cljs"],[1538195421000,"^S","^Q"],["^1K","goog/functions/functions.js"],[1538195417000,"^S"],["^1K","devtools/prefs.cljs"],[1538195421000,"^S","^Q","^1Y"],["^1K","clojure/walk.cljs"],[1549013760000,"^S","^Q"],["^1K","goog/structs/map.js"],[1538195417000,"^S","~$goog.iter.Iterator","~$goog.iter.StopIteration","^24"],["^1X","^D"],[1538195421000],["^1K","devtools/munging.cljs"],[1538195421000,"^S","^Q","^2<","~$devtools.context","^24","^2="],["^1K","devtools/formatters/core.cljs"],[1538195421000,"^S","^Q","^X","^V","^T","^R","^O","^M","^P","^N","^U"],["^1K","goog/labs/useragent/engine.js"],[1538195417000,"^S","^22","^1Z","^1["],["^1K","goog/asserts/asserts.js"],[1538195417000,"^S","~$goog.debug.Error","~$goog.dom.NodeType","^1["],["^1X","~$cljs.pprint"],[1549013760000],["^1K","goog/uri/uri.js"],[1538195417000,"^S","^22","^23","^1[","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"],["^1K","goog/base.js"],[1538195417000],["^1K","goog/structs/structs.js"],[1538195417000,"^S","^22","^24"],["^1K","clojure/string.cljs"],[1549013760000,"^S","^Q","^1[","^2="],["^1K","devtools/formatters/state.cljs"],[1538195421000,"^S","^Q"],["^1K","devtools/reporter.cljs"],[1538195421000,"^S","^Q","^2;","^2A"],["^1K","goog/string/string.js"],[1538195417000,"^S"],["^1X","^21"],[1538195421000],["^1K","clojure/data.cljs"],[1549013760000,"^S","^Q","~$clojure.set"],["^1K","goog/reflect/reflect.js"],[1538195417000,"^S"],["^1K","goog/labs/useragent/util.js"],[1538195417000,"^S","^1["],["^1K","goog/string/stringbuffer.js"],[1538195417000,"^S"],["^1K","goog/iter/iter.js"],[1538195417000,"^S","^22","^23","~$goog.functions","~$goog.math"],["^1K","devtools/defaults.cljs"],[1538195421000,"^S","^Q"],["^1X","^X"],[1538195421000],["^1K","cljs/core.cljs"],[1549013760000,"~$goog.math.Long","~$goog.math.Integer","^1[","^24","^22","~$goog.Uri","^2="],["^1K","devtools/context.cljs"],[1538195421000,"^S","^Q"],["^1K","goog/math/integer.js"],[1538195417000,"^S"],["^1K","devtools/format.cljs"],[1538195421000,"^S","^Q","^2A"],["^1X","~$devtools.compiler"],[1538195421000],["^1K","clojure/set.cljs"],[1549013760000,"^S","^Q"],["^1K","goog/uri/utils.js"],[1538195417000,"^S","^22","^23","^1["],["^1K","devtools/protocols.cljs"],[1538195421000,"^S","^Q"],["^1K","devtools/util.cljs"],[1538195421000,"^S","^Q","~$goog.userAgent","~$clojure.data","^25","^2A","^2D","^X"]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","devtools/formatters/core.cljs","^7",1,"^8",5,"^9",1,"^:",29],"^;",["^ ","^<","^=","^>","^?","^@","^A"],"^B",["^ ","^C","^D"],"^E",["^F",[]],"^G","^H","^K",null,"^L",["^ ","^M","^M","^N","^N","^O","^O","^P","^P","^Q","^Q","^R","^R","^S","^S","^T","^T","^U","^U","^V","^V","^W","^R","^X","^X"],"^Y",["^F",["^Z","^["]],"^10",["^ ","^11","^P","^12","^N","^13","^U","^14","^V","^15","^O","^16","^N","^17","^X","^18","^N","^19","^O","^1:","^P","^1;","^T","^1<","^P","^1=","^O","^1>","^P","^1?","^P","^1@","^U","^1A","^M"],"~:defs",["^ ","~$body",["^ ","^G","~$devtools.formatters.core/body","^6","devtools/formatters/core.cljs","^7",57,"^8",1,"^9",57,"^:",10,"^5",["^ ","^6","devtools/formatters/core.cljs","^7",57,"^8",6,"^9",57,"^:",10],"~:tag","~$function"],"~$body-api-call",["^ ","^G","~$devtools.formatters.core/body-api-call","^6","devtools/formatters/core.cljs","^7",85,"^8",1,"^9",85,"^:",19,"^5",["^ ","^6","devtools/formatters/core.cljs","^7",85,"^8",6,"^9",85,"^:",19],"^2W","^2X"],"~$want-value?",["^ ","^G","~$devtools.formatters.core/want-value?","^6","devtools/formatters/core.cljs","^7",54,"^8",1,"^9",54,"^:",17,"^5",["^ ","^6","devtools/formatters/core.cljs","^7",54,"^8",6,"^9",54,"^:",17],"^2W","^2X"],"~$has-body*",["^ ","~:protocol-inline",null,"^5",["^ ","^6","devtools/formatters/core.cljs","^7",28,"^8",7,"^9",28,"^:",16,"~:arglists",["^1C",["~$quote",["^1C",[["~$value"]]]]]],"^G","~$devtools.formatters.core/has-body*","^6","devtools/formatters/core.cljs","^:",16,"~:method-params",["^1C",[["^35"]]],"~:protocol-impl",null,"~:arglists-meta",["^1C",[null,null]],"^8",1,"~:variadic?",false,"^7",28,"~:ret-tag","~$boolean","^9",28,"~:max-fixed-arity",1,"~:fn-var",true,"^33",["^1C",["^34",["^1C",[["^35"]]]]]],"~$body*",["^ ","^32",null,"^5",["^ ","^6","devtools/formatters/core.cljs","^7",39,"^8",7,"^9",39,"^:",12,"^33",["^1C",["^34",["^1C",[["^35"]]]]]],"^G","~$devtools.formatters.core/body*","^6","devtools/formatters/core.cljs","^:",12,"^37",["^1C",[["^35"]]],"^38",null,"^39",["^1C",[null,null]],"^8",1,"^3:",false,"^7",39,"^3;",["^F",[null,"~$any","~$clj-nil"]],"^9",39,"^3=",1,"^3>",true,"^33",["^1C",["^34",["^1C",[["^35"]]]]]],"~$wrap-with-exception-guard",["^ ","^32",null,"^5",["^ ","^6","devtools/formatters/core.cljs","^7",61,"^8",7,"^9",61,"^:",32,"^33",["^1C",["^34",["^1C",[["~$f"]]]]]],"^G","~$devtools.formatters.core/wrap-with-exception-guard","^6","devtools/formatters/core.cljs","^:",32,"^37",["^1C",[["~$f"]]],"^38",null,"^39",["^1C",[null,null]],"^8",1,"^3:",false,"^7",61,"^3;","^2X","^9",61,"^3=",1,"^3>",true,"^33",["^1C",["^34",["^1C",[["~$f"]]]]]],"~$header",["^ ","^G","~$devtools.formatters.core/header","^6","devtools/formatters/core.cljs","^7",55,"^8",1,"^9",55,"^:",12,"^5",["^ ","^6","devtools/formatters/core.cljs","^7",55,"^8",6,"^9",55,"^:",12],"^2W","^2X"],"~$want-value?*",["^ ","^32",null,"^5",["^ ","^6","devtools/formatters/core.cljs","^7",16,"^8",7,"^9",16,"^:",19,"^33",["^1C",["^34",["^1C",[["^35"]]]]]],"^G","~$devtools.formatters.core/want-value?*","^6","devtools/formatters/core.cljs","^:",19,"^37",["^1C",[["^35"]]],"^38",null,"^39",["^1C",[null,null]],"^8",1,"^3:",false,"^7",16,"^3;",["^F",["^3<","^3A"]],"^9",16,"^3=",1,"^3>",true,"^33",["^1C",["^34",["^1C",[["^35"]]]]]],"~$header*",["^ ","^32",null,"^5",["^ ","^6","devtools/formatters/core.cljs","^7",20,"^8",7,"^9",20,"^:",14,"^33",["^1C",["^34",["^1C",[["^35"]]]]]],"^G","~$devtools.formatters.core/header*","^6","devtools/formatters/core.cljs","^:",14,"^37",["^1C",[["^35"]]],"^38",null,"^39",["^1C",[null,null]],"^8",1,"^3:",false,"^7",20,"^3;",["^F",[null,"^3A","^3B"]],"^9",20,"^3=",1,"^3>",true,"^33",["^1C",["^34",["^1C",[["^35"]]]]]],"~$has-body-api-call",["^ ","^G","~$devtools.formatters.core/has-body-api-call","^6","devtools/formatters/core.cljs","^7",84,"^8",1,"^9",84,"^:",23,"^5",["^ ","^6","devtools/formatters/core.cljs","^7",84,"^8",6,"^9",84,"^:",23],"^2W","^2X"],"~$build-api-call",["^ ","^32",null,"^5",["^ ","^6","devtools/formatters/core.cljs","^7",69,"^8",7,"^9",69,"^:",21,"^33",["^1C",["^34",["^1C",[["~$raw-fn","~$pre-handler-key","~$post-handler-key"]]]]]],"^G","~$devtools.formatters.core/build-api-call","^6","devtools/formatters/core.cljs","^:",21,"^37",["^1C",[["^3N","^3O","^3P"]]],"^38",null,"^39",["^1C",[null,null]],"^8",1,"^3:",false,"^7",69,"^3;","^2X","^9",69,"^3=",3,"^3>",true,"^33",["^1C",["^34",["^1C",[["^3N","^3O","^3P"]]]]]],"~$header-api-call",["^ ","^G","~$devtools.formatters.core/header-api-call","^6","devtools/formatters/core.cljs","^7",83,"^8",1,"^9",83,"^:",21,"^5",["^ ","^6","devtools/formatters/core.cljs","^7",83,"^8",6,"^9",83,"^:",21],"^2W","^2X"],"~$has-body",["^ ","^G","~$devtools.formatters.core/has-body","^6","devtools/formatters/core.cljs","^7",56,"^8",1,"^9",56,"^:",14,"^5",["^ ","^6","devtools/formatters/core.cljs","^7",56,"^8",6,"^9",56,"^:",14],"^2W","^2X"],"~$config-wrapper",["^ ","^32",null,"^5",["^ ","^6","devtools/formatters/core.cljs","^7",49,"^8",7,"^9",49,"^:",21,"^33",["^1C",["^34",["^1C",[["^3N"]]]]]],"^G","~$devtools.formatters.core/config-wrapper","^6","devtools/formatters/core.cljs","^:",21,"^37",["^1C",[["^3N"]]],"^38",null,"^39",["^1C",[null,null]],"^8",1,"^3:",false,"^7",49,"^3;","^2X","^9",49,"^3=",1,"^3>",true,"^33",["^1C",["^34",["^1C",[["^3N"]]]]]]],"^[",["^ ","^D","^D","^Q","^Q","^N","^N","^X","^X"],"~:cljs.analyzer/constants",["^ ","^Y",["^F",["~:body-pre-handler","~:else","~:has-body-pre-handler","~:header-post-handler","~:header-pre-handler","~:body-post-handler","~:has-body-post-handler"]],"~:order",["^3Z","^41","^40","^3[","^43","^3Y","^42"]],"^1G",["^ ","^[",["^F",[]],"^Z",["^F",[]]],"^1H",["^ "],"^1I",["^S","^Q","^X","^V","^T","^R","^O","^M","^P","^N","^U"]],"^J","^H","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^1W",[["^47","~:static-fns"],true,["^47","~:elide-asserts"],false,["^47","~:optimize-constants"],null,["^47","^1N"],null,["^47","~:external-config"],null,["^47","~:tooling-config"],null,["^47","~:emit-constants"],null,["^47","~:load-tests"],null,["^47","~:infer-externs"],true,["^47","^1P"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^47","~:fn-invoke-direct"],null,["^47","~:source-map"],"/dev/null"]]]