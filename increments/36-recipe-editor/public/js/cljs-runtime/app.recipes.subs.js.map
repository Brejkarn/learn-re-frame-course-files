{"version":3,"sources":["app/recipes/subs.cljs"],"sourcesContent":["(ns app.recipes.subs\n  (:require [re-frame.core :refer [reg-sub]]))\n\n(reg-sub\n :drafts\n (fn [db _]\n   (let [recipes (vals (get-in db [:recipes]))\n         uid (get-in db [:auth :uid])\n         filters [#(= (:public? %) false) #(= (:cook %) uid)]]\n     (filter (apply every-pred filters) recipes))))\n\n(reg-sub\n :public\n (fn [db _]\n   (let [recipes (vals (get-in db [:recipes]))]\n     (filter #(= (:public? %) true) recipes))))\n\n(reg-sub\n :recipe\n (fn [db _]\n   (let [active-recipe (get-in db [:nav :active-recipe])]\n     (get-in db [:recipes active-recipe]))))\n\n(reg-sub\n :author?\n (fn [db _]\n   (let [uid (get-in db [:auth :uid])\n         active-recipe (get-in db [:nav :active-recipe])\n         recipe (get-in db [:recipes active-recipe])]\n     (= uid (:cook recipe)))))\n\n(reg-sub\n :ingredients\n (fn [db _]\n   (let [active-recipe (get-in db [:nav :active-recipe])\n         ingredients (get-in db [:recipes active-recipe :ingredients])]\n     (->> ingredients\n          (vals)\n          (sort-by :order)))))\n\n(reg-sub\n :steps\n (fn [db _]\n   (let [active-recipe (get-in db [:nav :active-recipe])\n         steps (get-in db [:recipes active-recipe :steps])]\n     (->> steps\n          (vals)\n          (sort-by :order)))))\n"],"mappings":";;;AAGA,AAAAA,AAAA;AAAAC,AAEC;AAAKE,AAAGC;AAAR,AACE,AAAMG,AAAQ,AAACC,AAAK,AAAA,AAAA,AAACC,AAAON;AACtBO,AAAI,AAAA,AAAA,AAAA,AAACD,AAAON;AADlB,AAAA,AAEMQ;AAFNN;AAAA,AAEgB,AAAA,AAACO,AAAE,AAAA,AAAAP;;AAFnB;AAAAC;AAAA,AAEwC,AAACM,AAAE,AAAA,AAAAN,AAAUI;;;AAFrD,AAGE,AAACG,AAAO,AAACC,AAAMC,AAAWJ,AAASJ;;;AANxC,AAAA,AAAAP,AAAAC,AAAAD,AAAAC,AAACC,AAAAA,AAAAA;AAQD,AAAAc,AAAA;AAAAC,AAEC;AAAKd,AAAGC;AAAR,AACE,AAAMG,AAAQ,AAACC,AAAK,AAAA,AAAA,AAACC,AAAON;AAA5B,AACE,AAAA,AAACU;AAADK;AAAA,AAAS,AAAA,AAACN,AAAE,AAAA,AAAAM;;AAAmBX;;;AAJpC,AAAA,AAAAS,AAAAC,AAAAD,AAAAC,AAACf,AAAAA,AAAAA;AAMD,AAAAiB,AAAA;AAAAC,AAEC;AAAKjB,AAAGC;AAAR,AACE,AAAMiB,AAAc,AAAA,AAAA,AAAA,AAACZ,AAAON;AAA5B,AACE,AAAA,AAAA,AAACM,AAAON,AAAakB;;;AAJ1B,AAAA,AAAAF,AAAAC,AAAAD,AAAAC,AAAClB,AAAAA,AAAAA;AAMD,AAAAoB,AAAA;AAAAC,AAEC;AAAKpB,AAAGC;AAAR,AACE,AAAMM,AAAI,AAAA,AAAA,AAAA,AAACD,AAAON;AACZkB,AAAc,AAAA,AAAA,AAAA,AAACZ,AAAON;AACtBqB,AAAO,AAAA,AAAA,AAACf,AAAON,AAAakB;AAFlC,AAGE,AAACT,AAAEF,AAAI,AAAA,AAAOc;;;AANnB,AAAA,AAAAF,AAAAC,AAAAD,AAAAC,AAACrB,AAAAA,AAAAA;AAQD,AAAAuB,AAAA;AAAAC,AAEC;AAAKvB,AAAGC;AAAR,AACE,AAAMiB,AAAc,AAAA,AAAA,AAAA,AAACZ,AAAON;AACtBwB,AAAY,AAAA,AAAA,AAAA,AAAClB,AAAON,AAAakB;AADvC,AAEOM,AACA,AAACnB,AACD,AAAA,AAACoB;;;AAPX,AAAA,AAAAH,AAAAC,AAAAD,AAAAC,AAACxB,AAAAA,AAAAA;AASD,AAAA2B,AAAA;AAAAC,AAEC;AAAK3B,AAAGC;AAAR,AACE,AAAMiB,AAAc,AAAA,AAAA,AAAA,AAACZ,AAAON;AACtB4B,AAAM,AAAA,AAAA,AAAA,AAACtB,AAAON,AAAakB;AADjC,AAEOU,AACA,AAACvB,AACD,AAAA,AAACoB;;;AAPX,AAAA,AAAAC,AAAAC,AAAAD,AAAAC,AAAC5B,AAAAA,AAAAA","names":["G__26123","G__26124","re-frame.core/reg-sub","db","_","p1__26121#","p1__26122#","recipes","cljs.core/vals","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2","uid","filters","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","cljs.core.filter.cljs$core$IFn$_invoke$arity$2","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/every-pred","G__26126","G__26127","p1__26125#","G__26128","G__26129","active-recipe","G__26130","G__26131","recipe","G__26157","G__26158","ingredients","cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2","G__26160","G__26161","steps"]}